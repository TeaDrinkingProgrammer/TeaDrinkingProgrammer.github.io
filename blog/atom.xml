<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
    <title>TeaDrinkingProgrammer - Blog</title>
    <subtitle>My little website</subtitle>
    <link rel="self" type="application/atom+xml" href="https://teadrinkingprogrammer.github.io/blog/atom.xml"/>
    <link rel="alternate" type="text/html" href="https://teadrinkingprogrammer.github.io/blog/"/>
    <generator uri="https://www.getzola.org/">Zola</generator>
    <updated>2025-08-15T00:00:00+00:00</updated>
    <id>https://teadrinkingprogrammer.github.io/blog/atom.xml</id>
    <entry xml:lang="en">
        <title>Less complexity, same interactivity, all with HTMX: adopting the Hypermedia mindset</title>
        <published>2025-08-15T00:00:00+00:00</published>
        <updated>2025-08-15T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              TeaDrinkingProgrammer
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://teadrinkingprogrammer.github.io/blog/hypermedia-mindset/"/>
        <id>https://teadrinkingprogrammer.github.io/blog/hypermedia-mindset/</id>
        
        <content type="html" xml:base="https://teadrinkingprogrammer.github.io/blog/hypermedia-mindset/">&lt;h2 id=&quot;htmx-beyond-the-hype&quot;&gt;&lt;span class=&quot;not-prose&quot;&gt;
    &lt;a class=&quot;tl-link text-2xl&quot; 
    href=&quot;#htmx-beyond-the-hype&quot; 
    aria-label=&quot;Anchor link for: htmx-beyond-the-hype&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;span&gt;
HTMX: beyond the hype&lt;&#x2F;h2&gt;
&lt;p&gt;You might have heard about the buzz around HTMX and Hypermedia as of late. On the surface, HTMX sounds like it is solving a problem that doesn’t exist: we have Single Page Applications, why would we need old-fashioned Multi-page applications. Well, it turns out old-school multi-page apps had one major advantage we abandoned when adopting SPA frameworks: server-side rendered websites do not have to synchronise state between the server and the client. But before I try to convince you that you can build interactive apps with server-side technology, let’s see how we got here.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;how-we-got-here&quot;&gt;&lt;span class=&quot;not-prose&quot;&gt;
    &lt;a class=&quot;tl-link text-2xl&quot; 
    href=&quot;#how-we-got-here&quot; 
    aria-label=&quot;Anchor link for: how-we-got-here&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;span&gt;
How we got here&lt;&#x2F;h2&gt;
&lt;p&gt;In the beginning God created the heavens and the earth. A bit later, in 1989, Tim Berners Lee created the World Wide Web. At the start of the internet, web-sites were simple compared to today: you requested a web-page and you got one back. Simple as that. Nevertheless, the idea of the internet was, and is still, quite revolutionary: a network of pieces of media (like text, video, audio), linked together through links. The term that was adopted for this idea was Hypermedia.&lt;&#x2F;p&gt;
&lt;p&gt;Hypermedia at the beginning of the internet had two problems, though: it was hard to make very dynamic or interactive problems. The first issue was quickly solved by languages like PHP, but a far more interesting one is interactivity. Because, as the internet progressed, people and companies were not just looking for static or even dynamic content, but for something resembling desktop applications. At the time, people started using JQuery to add little bits and pieces of interactivity to their websites, but as the interactivity requirements grew, people found that applications were becoming hard to manage. To solve this issue, people moved to …&lt;&#x2F;p&gt;
&lt;h2 id=&quot;single-page-applications&quot;&gt;&lt;span class=&quot;not-prose&quot;&gt;
    &lt;a class=&quot;tl-link text-2xl&quot; 
    href=&quot;#single-page-applications&quot; 
    aria-label=&quot;Anchor link for: single-page-applications&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;span&gt;
Single Page applications&lt;&#x2F;h2&gt;
&lt;p&gt;Single Page Applications were made possible by the rise of JavaScript as a language that could be used within the browser. Because single page applications run on the client-side, interactivity was not an issue any more at all. This is the reason most of the industry moved towards it and moved away from JQuery: we as developers want to make good experiences for the end-user. SPAs also come with a big disadvantage, though: they do not make use of the power of Hypermedia. In short, this means that, for SPAs, you need to keep state synchronised between the server and the client. This means that you have to do a lot of stuff twice: routing, authentication and authorisation, data validation&#x2F;sanitation, translations, and most importantly: data serialization and deserialization.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;hypermedia-libraries-a-modern-spin-on-hypermedia&quot;&gt;&lt;span class=&quot;not-prose&quot;&gt;
    &lt;a class=&quot;tl-link text-2xl&quot; 
    href=&quot;#hypermedia-libraries-a-modern-spin-on-hypermedia&quot; 
    aria-label=&quot;Anchor link for: hypermedia-libraries-a-modern-spin-on-hypermedia&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;span&gt;
Hypermedia libraries: a modern spin on hypermedia&lt;&#x2F;h2&gt;
&lt;p&gt;The new crop of hypermedia libraries, like HTMX and Datastar, promise a middle ground between both: most of the interactivity of a SPA, with the simplicity of an ‘old school’ hypermedia server. The way they achieve this is by leveraging a feature of hypermedia: hypermedia as the driver of state (HATEOAS). This is the central idea that, instead of sending JSON and then deserialising it and putting it in the DOM (the page), we can skip that and just send HTML and swap that into a specific place of the DOM. This simplified model means we can get rid of most complexity on the client side, while still keeping an interactive website.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;hypermedia-in-action&quot;&gt;&lt;span class=&quot;not-prose&quot;&gt;
    &lt;a class=&quot;tl-link text-2xl&quot; 
    href=&quot;#hypermedia-in-action&quot; 
    aria-label=&quot;Anchor link for: hypermedia-in-action&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;span&gt;
Hypermedia in action&lt;&#x2F;h2&gt;
&lt;p&gt;One question I immediately had when hearing this HTMX approach, is how exactly you make apps with it that have a modern feel. I conceptually understood that it was possible, but I struggled with actually adopting the Hypermedia mindset. To show you how this works in practice, we will think through a problem I actually experienced: how to build a notification system. First we build think through the problem with a SPA mindset, afterwards we go through it with a Hypermedia mindset which will show us the advantages of the approach in practice.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;the-spa-way&quot;&gt;&lt;span class=&quot;not-prose&quot;&gt;
    &lt;a class=&quot;tl-link text-2xl&quot; 
    href=&quot;#the-spa-way&quot; 
    aria-label=&quot;Anchor link for: the-spa-way&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;span&gt;
The SPA way&lt;&#x2F;h2&gt;
&lt;p&gt;I started designing it in the way I was used to: listen for a response to come in, take the message out of the response, then display it on the page, all with JavaScript. This is because I wanted a fade-out animation, and I didn’t think you could use Hypermedia for that.&lt;&#x2F;p&gt;
&lt;p&gt;As some of you might expect, it got all got quite complex fairly quickly: how do I send the notifications to the client? How do I discard of outdated messages. In short: how do I sync the state of the server-side and the client-side..&lt;&#x2F;p&gt;
&lt;p&gt;In a SPA app, we would do something like this:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;The server sends down a JSON message with all the information you need:&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;pre data-lang=&quot;json&quot; class=&quot;language-json z-code&quot;&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span class=&quot;z-source z-json&quot;&gt;&lt;span class=&quot;z-meta z-mapping z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-mapping z-begin z-json&quot;&gt;{&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-json&quot;&gt;&lt;span class=&quot;z-meta z-mapping z-json&quot;&gt;    &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-key z-json&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;message&lt;span class=&quot;z-punctuation z-definition z-string z-end z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-key-value z-json&quot;&gt;:&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-meta z-mapping z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-mapping z-begin z-json&quot;&gt;{&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-json&quot;&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-meta z-mapping z-json&quot;&gt;        &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-key z-json&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;type&lt;span class=&quot;z-punctuation z-definition z-string z-end z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-key-value z-json&quot;&gt;:&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;success&lt;span class=&quot;z-punctuation z-definition z-string z-end z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-pair z-json&quot;&gt;,&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-json&quot;&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;        &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-key z-json&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;title&lt;span class=&quot;z-punctuation z-definition z-string z-end z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-key-value z-json&quot;&gt;:&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;Hi👋&lt;span class=&quot;z-punctuation z-definition z-string z-end z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-pair z-json&quot;&gt;,&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-json&quot;&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;        &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-key z-json&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;message&lt;span class=&quot;z-punctuation z-definition z-string z-end z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-mapping z-key-value z-json&quot;&gt;:&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;Lorem ipsum dolor sit amet&lt;span class=&quot;z-punctuation z-definition z-string z-end z-json&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-json&quot;&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;    &lt;span class=&quot;z-punctuation z-section z-mapping z-end z-json&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-json&quot;&gt;&lt;span class=&quot;z-meta z-mapping z-value z-json&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-mapping z-end z-json&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ul&gt;
&lt;li&gt;Receive the message on the client&lt;&#x2F;li&gt;
&lt;li&gt;Set up a template with a for loop&lt;&#x2F;li&gt;
&lt;li&gt;Call a library that displays your notification&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;If you wanted to display the notification without a library, you would also need to:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Make a notification component, using a template if to make it visible or not&lt;&#x2F;li&gt;
&lt;li&gt;Use for loop to list all notifications&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;As you can see, the main critique of SPAs is plainly visible here: you need to go from server -&amp;gt; JSON -&amp;gt; Client -&amp;gt; DOM&lt;&#x2F;p&gt;
&lt;p&gt;Let’s take a step back and see what we actually need:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;A way to select a notification type&lt;&#x2F;li&gt;
&lt;li&gt;A fade-out animation&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;From a SPA perspective, it seems like the most logical way is to translate JSON to HMTL and call it a day. It turns out though, that 90% of this problem can be easily solved with only a tiny bit of JavaScript logic if you use a Hypermedia approach.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;the-hda-way&quot;&gt;&lt;span class=&quot;not-prose&quot;&gt;
    &lt;a class=&quot;tl-link text-2xl&quot; 
    href=&quot;#the-hda-way&quot; 
    aria-label=&quot;Anchor link for: the-hda-way&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;span&gt;
The HDA way&lt;&#x2F;h2&gt;
&lt;p&gt;In Hypermedia, you start with, well, hypermedia! So let’s start with a HyperText Markup Language (HTML) template with some Tailwind CSS styling (using DaisyUI):&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;jinja2&quot; class=&quot;language-jinja2 z-code&quot;&gt;&lt;code class=&quot;language-jinja2&quot; data-lang=&quot;jinja2&quot;&gt;&lt;span class=&quot;z-source z-jinja2&quot;&gt; &amp;lt;div class=&amp;quot;bg-white relative rounded-md shadow-md w-96 h-30 mb-4 mr-6 flex items-center gap-3&amp;quot;&amp;gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-jinja2&quot;&gt;        &amp;lt;div class=&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-jinja2&quot;&gt;            w-2
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-jinja2&quot;&gt;            h-full 
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-jinja2&quot;&gt;            &lt;span class=&quot;z-meta z-scope z-jinja2 z-tag&quot;&gt;&lt;span class=&quot;z-entity z-other z-jinja2 z-delimiter z-tag&quot;&gt;{%&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-control z-jinja2&quot;&gt;if&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-jinja2&quot;&gt;message&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-other z-jinja2&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-jinja2 z-attribute&quot;&gt;tags&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-comparison z-jinja2&quot;&gt;==&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-single z-jinja2&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-jinja2&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;success&lt;span class=&quot;z-punctuation z-definition z-string z-end z-jinja2&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-other z-jinja2 z-delimiter z-tag&quot;&gt;%}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-jinja2&quot;&gt;                bg-success
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-jinja2&quot;&gt;            &lt;span class=&quot;z-meta z-scope z-jinja2 z-tag&quot;&gt;&lt;span class=&quot;z-entity z-other z-jinja2 z-delimiter z-tag&quot;&gt;{%&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-control z-jinja2&quot;&gt;elif&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-jinja2&quot;&gt;message&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-other z-jinja2&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-jinja2 z-attribute&quot;&gt;tags&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-comparison z-jinja2&quot;&gt;==&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-single z-jinja2&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-jinja2&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;info&lt;span class=&quot;z-punctuation z-definition z-string z-end z-jinja2&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-other z-jinja2 z-delimiter z-tag&quot;&gt;%}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-jinja2&quot;&gt;                bg-info
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-jinja2&quot;&gt;            &lt;span class=&quot;z-meta z-scope z-jinja2 z-tag&quot;&gt;&lt;span class=&quot;z-entity z-other z-jinja2 z-delimiter z-tag&quot;&gt;{%&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-control z-jinja2&quot;&gt;elif&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-jinja2&quot;&gt;message&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-other z-jinja2&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-jinja2 z-attribute&quot;&gt;tags&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-comparison z-jinja2&quot;&gt;==&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-single z-jinja2&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-jinja2&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;warning&lt;span class=&quot;z-punctuation z-definition z-string z-end z-jinja2&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-other z-jinja2 z-delimiter z-tag&quot;&gt;%}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-jinja2&quot;&gt;                bg-warning
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-jinja2&quot;&gt;            &lt;span class=&quot;z-meta z-scope z-jinja2 z-tag&quot;&gt;&lt;span class=&quot;z-entity z-other z-jinja2 z-delimiter z-tag&quot;&gt;{%&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-control z-jinja2&quot;&gt;elif&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-jinja2&quot;&gt;message&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-other z-jinja2&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-jinja2 z-attribute&quot;&gt;tags&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-comparison z-jinja2&quot;&gt;==&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-single z-jinja2&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-jinja2&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;error&lt;span class=&quot;z-punctuation z-definition z-string z-end z-jinja2&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-other z-jinja2 z-delimiter z-tag&quot;&gt;%}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-jinja2&quot;&gt;                bg-error
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-jinja2&quot;&gt;            &lt;span class=&quot;z-meta z-scope z-jinja2 z-tag&quot;&gt;&lt;span class=&quot;z-entity z-other z-jinja2 z-delimiter z-tag&quot;&gt;{%&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-control z-jinja2&quot;&gt;endif&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-other z-jinja2 z-delimiter z-tag&quot;&gt;%}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-jinja2&quot;&gt;        &amp;quot;&amp;gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-jinja2&quot;&gt;        &amp;lt;&#x2F;div&amp;gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-jinja2&quot;&gt;        &amp;lt;i class=&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-jinja2&quot;&gt;            bi
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-jinja2&quot;&gt;            text-lg
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-jinja2&quot;&gt;            &lt;span class=&quot;z-meta z-scope z-jinja2 z-tag&quot;&gt;&lt;span class=&quot;z-entity z-other z-jinja2 z-delimiter z-tag&quot;&gt;{%&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-control z-jinja2&quot;&gt;if&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-jinja2&quot;&gt;message&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-other z-jinja2&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-jinja2 z-attribute&quot;&gt;tags&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-comparison z-jinja2&quot;&gt;==&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-single z-jinja2&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-jinja2&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;success&lt;span class=&quot;z-punctuation z-definition z-string z-end z-jinja2&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-other z-jinja2 z-delimiter z-tag&quot;&gt;%}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-jinja2&quot;&gt;                bi-check-circle-fill text-success
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-jinja2&quot;&gt;            &lt;span class=&quot;z-meta z-scope z-jinja2 z-tag&quot;&gt;&lt;span class=&quot;z-entity z-other z-jinja2 z-delimiter z-tag&quot;&gt;{%&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-control z-jinja2&quot;&gt;elif&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-jinja2&quot;&gt;message&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-other z-jinja2&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-jinja2 z-attribute&quot;&gt;tags&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-comparison z-jinja2&quot;&gt;==&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-single z-jinja2&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-jinja2&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;info&lt;span class=&quot;z-punctuation z-definition z-string z-end z-jinja2&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-other z-jinja2 z-delimiter z-tag&quot;&gt;%}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-jinja2&quot;&gt;                bi-info-circle-fill text-info
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-jinja2&quot;&gt;            &lt;span class=&quot;z-meta z-scope z-jinja2 z-tag&quot;&gt;&lt;span class=&quot;z-entity z-other z-jinja2 z-delimiter z-tag&quot;&gt;{%&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-control z-jinja2&quot;&gt;elif&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-jinja2&quot;&gt;message&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-other z-jinja2&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-jinja2 z-attribute&quot;&gt;tags&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-comparison z-jinja2&quot;&gt;==&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-single z-jinja2&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-jinja2&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;warning&lt;span class=&quot;z-punctuation z-definition z-string z-end z-jinja2&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-other z-jinja2 z-delimiter z-tag&quot;&gt;%}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-jinja2&quot;&gt;                bi-exclamation-triangle-fill text-warning
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-jinja2&quot;&gt;            &lt;span class=&quot;z-meta z-scope z-jinja2 z-tag&quot;&gt;&lt;span class=&quot;z-entity z-other z-jinja2 z-delimiter z-tag&quot;&gt;{%&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-control z-jinja2&quot;&gt;elif&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-jinja2&quot;&gt;message&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-other z-jinja2&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-jinja2 z-attribute&quot;&gt;tags&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-comparison z-jinja2&quot;&gt;==&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-single z-jinja2&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-jinja2&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;error&lt;span class=&quot;z-punctuation z-definition z-string z-end z-jinja2&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-other z-jinja2 z-delimiter z-tag&quot;&gt;%}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-jinja2&quot;&gt;                bi-exclamation-circle-fill text-error
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-jinja2&quot;&gt;            &lt;span class=&quot;z-meta z-scope z-jinja2 z-tag&quot;&gt;&lt;span class=&quot;z-entity z-other z-jinja2 z-delimiter z-tag&quot;&gt;{%&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-control z-jinja2&quot;&gt;endif&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-other z-jinja2 z-delimiter z-tag&quot;&gt;%}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-jinja2&quot;&gt;        &amp;quot;&amp;gt;&amp;lt;&#x2F;i&amp;gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-jinja2&quot;&gt;        &amp;lt;span&amp;gt;&lt;span class=&quot;z-meta z-scope z-jinja2 z-variable&quot;&gt;&lt;span class=&quot;z-entity z-other z-jinja2 z-delimiter z-variable&quot;&gt;{{&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-jinja2&quot;&gt;message&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-other z-jinja2 z-delimiter z-variable&quot;&gt;}}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&amp;lt;&#x2F;span&amp;gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-jinja2&quot;&gt;    &amp;lt;&#x2F;div&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;As you can see, we don’t need to communicate any metadata, like the type of message to the client, because we deal with that on the server. This is HATEOS in action: the HTML &lt;em&gt;is&lt;&#x2F;em&gt; the state.&lt;&#x2F;p&gt;
&lt;p&gt;This works quite well, but what if we want to add a fade-out? Here, we can use a mix of CSS and a sprinkle of Javascript to make it work.&lt;&#x2F;p&gt;
&lt;p&gt;The first thing we add is the fade-out effect. You can do this using ‘vanilla’ CSS, but I opted to use the excellent Tailwind CSS Animated. If you have never looked at it yet, you should take a look at &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.tailwindcss-animated.com&#x2F;configurator.html&quot;&gt;their excellent configurator&lt;&#x2F;a&gt;, that allows you to trivially put together CSS animations.&lt;&#x2F;p&gt;
&lt;p&gt;The following will animate the HTML:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;jinja2&quot; class=&quot;language-jinja2 z-code&quot;&gt;&lt;code class=&quot;language-jinja2&quot; data-lang=&quot;jinja2&quot;&gt;&lt;span class=&quot;z-source z-jinja2&quot;&gt; &amp;lt;div
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-jinja2&quot;&gt;    class=&amp;quot;&amp;lt;other CSS classes&amp;gt; animate-delay-[5000ms] animate-fade-left animate-reverse&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-jinja2&quot;&gt;    style=&amp;quot;pointer-events:all&amp;quot;&amp;gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-jinja2&quot;&gt;        &amp;lt;div class=&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-jinja2&quot;&gt;            w-2
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-jinja2&quot;&gt;            h-full 
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-jinja2&quot;&gt;            &lt;span class=&quot;z-meta z-scope z-jinja2 z-tag&quot;&gt;&lt;span class=&quot;z-entity z-other z-jinja2 z-delimiter z-tag&quot;&gt;{%&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-control z-jinja2&quot;&gt;if&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-jinja2&quot;&gt;message&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-other z-jinja2&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-jinja2 z-attribute&quot;&gt;tags&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-comparison z-jinja2&quot;&gt;==&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-single z-jinja2&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-jinja2&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;success&lt;span class=&quot;z-punctuation z-definition z-string z-end z-jinja2&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-other z-jinja2 z-delimiter z-tag&quot;&gt;%}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-jinja2&quot;&gt;                bg-success
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-jinja2&quot;&gt;            &lt;span class=&quot;z-meta z-scope z-jinja2 z-tag&quot;&gt;&lt;span class=&quot;z-entity z-other z-jinja2 z-delimiter z-tag&quot;&gt;{%&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-control z-jinja2&quot;&gt;elif&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-jinja2&quot;&gt;message&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-other z-jinja2&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-jinja2 z-attribute&quot;&gt;tags&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-comparison z-jinja2&quot;&gt;==&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-single z-jinja2&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-jinja2&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;info&lt;span class=&quot;z-punctuation z-definition z-string z-end z-jinja2&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-other z-jinja2 z-delimiter z-tag&quot;&gt;%}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-jinja2&quot;&gt;                bg-info
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-jinja2&quot;&gt;            &lt;span class=&quot;z-meta z-scope z-jinja2 z-tag&quot;&gt;&lt;span class=&quot;z-entity z-other z-jinja2 z-delimiter z-tag&quot;&gt;{%&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-control z-jinja2&quot;&gt;elif&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-jinja2&quot;&gt;message&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-other z-jinja2&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-jinja2 z-attribute&quot;&gt;tags&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-comparison z-jinja2&quot;&gt;==&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-single z-jinja2&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-jinja2&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;warning&lt;span class=&quot;z-punctuation z-definition z-string z-end z-jinja2&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-other z-jinja2 z-delimiter z-tag&quot;&gt;%}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-jinja2&quot;&gt;                bg-warning
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-jinja2&quot;&gt;            &lt;span class=&quot;z-meta z-scope z-jinja2 z-tag&quot;&gt;&lt;span class=&quot;z-entity z-other z-jinja2 z-delimiter z-tag&quot;&gt;{%&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-control z-jinja2&quot;&gt;elif&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-jinja2&quot;&gt;message&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-other z-jinja2&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-jinja2 z-attribute&quot;&gt;tags&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-comparison z-jinja2&quot;&gt;==&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-single z-jinja2&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-jinja2&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;error&lt;span class=&quot;z-punctuation z-definition z-string z-end z-jinja2&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-other z-jinja2 z-delimiter z-tag&quot;&gt;%}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-jinja2&quot;&gt;                bg-error
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-jinja2&quot;&gt;            &lt;span class=&quot;z-meta z-scope z-jinja2 z-tag&quot;&gt;&lt;span class=&quot;z-entity z-other z-jinja2 z-delimiter z-tag&quot;&gt;{%&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-control z-jinja2&quot;&gt;endif&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-other z-jinja2 z-delimiter z-tag&quot;&gt;%}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-jinja2&quot;&gt;        &amp;quot;&amp;gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-jinja2&quot;&gt;        &amp;lt;&#x2F;div&amp;gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-jinja2&quot;&gt;        &amp;lt;i class=&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-jinja2&quot;&gt;            bi
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-jinja2&quot;&gt;            text-lg
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-jinja2&quot;&gt;            &lt;span class=&quot;z-meta z-scope z-jinja2 z-tag&quot;&gt;&lt;span class=&quot;z-entity z-other z-jinja2 z-delimiter z-tag&quot;&gt;{%&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-control z-jinja2&quot;&gt;if&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-jinja2&quot;&gt;message&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-other z-jinja2&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-jinja2 z-attribute&quot;&gt;tags&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-comparison z-jinja2&quot;&gt;==&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-single z-jinja2&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-jinja2&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;success&lt;span class=&quot;z-punctuation z-definition z-string z-end z-jinja2&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-other z-jinja2 z-delimiter z-tag&quot;&gt;%}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-jinja2&quot;&gt;                bi-check-circle-fill text-success
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-jinja2&quot;&gt;            &lt;span class=&quot;z-meta z-scope z-jinja2 z-tag&quot;&gt;&lt;span class=&quot;z-entity z-other z-jinja2 z-delimiter z-tag&quot;&gt;{%&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-control z-jinja2&quot;&gt;elif&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-jinja2&quot;&gt;message&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-other z-jinja2&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-jinja2 z-attribute&quot;&gt;tags&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-comparison z-jinja2&quot;&gt;==&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-single z-jinja2&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-jinja2&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;info&lt;span class=&quot;z-punctuation z-definition z-string z-end z-jinja2&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-other z-jinja2 z-delimiter z-tag&quot;&gt;%}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-jinja2&quot;&gt;                bi-info-circle-fill text-info
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-jinja2&quot;&gt;            &lt;span class=&quot;z-meta z-scope z-jinja2 z-tag&quot;&gt;&lt;span class=&quot;z-entity z-other z-jinja2 z-delimiter z-tag&quot;&gt;{%&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-control z-jinja2&quot;&gt;elif&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-jinja2&quot;&gt;message&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-other z-jinja2&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-jinja2 z-attribute&quot;&gt;tags&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-comparison z-jinja2&quot;&gt;==&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-single z-jinja2&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-jinja2&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;warning&lt;span class=&quot;z-punctuation z-definition z-string z-end z-jinja2&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-other z-jinja2 z-delimiter z-tag&quot;&gt;%}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-jinja2&quot;&gt;                bi-exclamation-triangle-fill text-warning
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-jinja2&quot;&gt;            &lt;span class=&quot;z-meta z-scope z-jinja2 z-tag&quot;&gt;&lt;span class=&quot;z-entity z-other z-jinja2 z-delimiter z-tag&quot;&gt;{%&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-control z-jinja2&quot;&gt;elif&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-jinja2&quot;&gt;message&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-other z-jinja2&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-jinja2 z-attribute&quot;&gt;tags&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-comparison z-jinja2&quot;&gt;==&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-single z-jinja2&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-jinja2&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;error&lt;span class=&quot;z-punctuation z-definition z-string z-end z-jinja2&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-other z-jinja2 z-delimiter z-tag&quot;&gt;%}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-jinja2&quot;&gt;                bi-exclamation-circle-fill text-error
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-jinja2&quot;&gt;            &lt;span class=&quot;z-meta z-scope z-jinja2 z-tag&quot;&gt;&lt;span class=&quot;z-entity z-other z-jinja2 z-delimiter z-tag&quot;&gt;{%&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-control z-jinja2&quot;&gt;endif&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-other z-jinja2 z-delimiter z-tag&quot;&gt;%}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-jinja2&quot;&gt;        &amp;quot;&amp;gt;&amp;lt;&#x2F;i&amp;gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-jinja2&quot;&gt;        &amp;lt;span&amp;gt;&lt;span class=&quot;z-meta z-scope z-jinja2 z-variable&quot;&gt;&lt;span class=&quot;z-entity z-other z-jinja2 z-delimiter z-variable&quot;&gt;{{&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-jinja2&quot;&gt;message&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-other z-jinja2 z-delimiter z-variable&quot;&gt;}}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&amp;lt;&#x2F;span&amp;gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-jinja2&quot;&gt;    &amp;lt;&#x2F;div&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Notice how we don’t need any code to fade out the notification. We leverage the fact that the CSS delay will start once the notification is in the DOM, in other words: we use the HDA flow to our advantage.&lt;&#x2F;p&gt;
&lt;p&gt;This will create a small problem, though: if we keep receiving notifications, the notifications will fade away but pile up in the DOM. I would also like the user to be able to dismiss the notification. If you are not very familiar with Hypermedia apps, you might think this is impossible to do within the paradigm, and we need to grasp for “hacks”. This isn’t the case, though: we can do some scripting while still working within the constraints of the Hypermedia architecture.&lt;&#x2F;p&gt;
&lt;p&gt;Scripting? I thought Hypermedia Driven Apps were all about &lt;em&gt;not&lt;&#x2F;em&gt; using JavaScript?&lt;&#x2F;p&gt;
&lt;p&gt;Well, this is partially true. The HDA archticture is all about using Hypermedia to transfer state instead of maintaining both client-side state and server-side state and having to synchronise it. Scripting can absolutely fit in this paradigm, as long as the script doesn’t start maintaining state that is relevant for the server. Carson Gross, the guy behind HTMX who has lot’s of excellent essays on SWE and Hypermedia, has written &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;htmx.org&#x2F;essays&#x2F;hypermedia-friendly-scripting&#x2F;&quot;&gt;a great article&lt;&#x2F;a&gt; about how scripting fits in to HDA apps.&lt;&#x2F;p&gt;
&lt;p&gt;In this example, we have already used our hypermedia response and some CSS to instruct the client to fade out the element after a certain time. We just need a tiny bit of scripting to remove the element after the CSS animation is done. We could do this in Vanilla JS, but there are tools that slot into the hypermedia paradigm a lot better, especially with regards to &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;htmx.org&#x2F;essays&#x2F;locality-of-behaviour&#x2F;&quot;&gt;Locality of Behaviour&lt;&#x2F;a&gt;. The authors of HTMX have built &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;hyperscript.org&#x2F;docs&#x2F;#introduction&quot;&gt;Hyperscript&lt;&#x2F;a&gt; for this purpose, but I prefer sticking with what I know, so I went with AlpineJS. &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;alpinejs.dev&#x2F;&quot;&gt;AlpineJS&lt;&#x2F;a&gt; is a lightweight Javascript library that makes it a lot easier to enhance HTML with some scripting. In that way, it is similar to JQuery, but it’s syntax takes notes from modern SPA frameworks, and it respects Locality of Behaviour.&lt;&#x2F;p&gt;
&lt;p&gt;In our example, adding this behaviour is a piece of cake:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;html&quot; class=&quot;language-html z-code&quot;&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;z-text z-html z-basic&quot;&gt;    &lt;span class=&quot;z-meta z-tag z-block z-any z-html&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-tag z-begin z-html&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-tag z-block z-any z-html&quot;&gt;div&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-basic&quot;&gt;&lt;span class=&quot;z-meta z-tag z-block z-any z-html&quot;&gt;        &lt;span class=&quot;z-meta z-attribute-with-value z-html&quot;&gt;&lt;span class=&quot;z-entity z-other z-attribute-name z-html&quot;&gt;x-data&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-basic&quot;&gt;&lt;span class=&quot;z-meta z-tag z-block z-any z-html&quot;&gt;&lt;span class=&quot;z-meta z-attribute-with-value z-html&quot;&gt;        &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-attribute-with-value z-html&quot;&gt;&lt;span class=&quot;z-entity z-other z-attribute-name z-html&quot;&gt;@click&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-html&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-html&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-html&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;$el.classList.replace(&amp;#39;{{ default_delay_class }}&amp;#39;, &amp;#39;{{ click_delay_class }}&amp;#39;)&lt;span class=&quot;z-punctuation z-definition z-string z-end z-html&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-basic&quot;&gt;&lt;span class=&quot;z-meta z-tag z-block z-any z-html&quot;&gt;        &lt;span class=&quot;z-meta z-attribute-with-value z-html&quot;&gt;&lt;span class=&quot;z-entity z-other z-attribute-name z-html&quot;&gt;@animationend&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-html&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-html&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-html&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;$el.remove()&lt;span class=&quot;z-punctuation z-definition z-string z-end z-html&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-basic&quot;&gt;&lt;span class=&quot;z-meta z-tag z-block z-any z-html&quot;&gt;        &lt;span class=&quot;z-meta z-attribute-with-value z-class z-html&quot;&gt;&lt;span class=&quot;z-entity z-other z-attribute-name z-class z-html&quot;&gt;class&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-html&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-html&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-html&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-html&quot;&gt;&lt;span class=&quot;z-meta z-class-name z-html&quot;&gt;...&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-end z-html&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-tag z-end z-html&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-basic&quot;&gt;        &lt;span class=&quot;z-meta z-tag z-block z-any z-html&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-tag z-begin z-html&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-tag z-block z-any z-html&quot;&gt;div&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-attribute-with-value z-class z-html&quot;&gt;&lt;span class=&quot;z-entity z-other z-attribute-name z-class z-html&quot;&gt;class&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-html&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-html&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-html&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-html&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-basic&quot;&gt;&lt;span class=&quot;z-meta z-tag z-block z-any z-html&quot;&gt;&lt;span class=&quot;z-meta z-attribute-with-value z-class z-html&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-html&quot;&gt;            &lt;span class=&quot;z-meta z-class-name z-html&quot;&gt;w-2&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-basic&quot;&gt;&lt;span class=&quot;z-meta z-tag z-block z-any z-html&quot;&gt;&lt;span class=&quot;z-meta z-attribute-with-value z-class z-html&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-html&quot;&gt;            &lt;span class=&quot;z-meta z-class-name z-html&quot;&gt;h-full&lt;&#x2F;span&gt; 
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-basic&quot;&gt;&lt;span class=&quot;z-meta z-tag z-block z-any z-html&quot;&gt;&lt;span class=&quot;z-meta z-attribute-with-value z-class z-html&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-html&quot;&gt;            &lt;span class=&quot;z-meta z-class-name z-html&quot;&gt;{%&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-class-name z-html&quot;&gt;if&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-class-name z-html&quot;&gt;message.tags&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-class-name z-html&quot;&gt;==&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-class-name z-html&quot;&gt;&amp;#39;success&amp;#39;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-class-name z-html&quot;&gt;%}&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-basic&quot;&gt;&lt;span class=&quot;z-meta z-tag z-block z-any z-html&quot;&gt;&lt;span class=&quot;z-meta z-attribute-with-value z-class z-html&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-html&quot;&gt;                &lt;span class=&quot;z-meta z-class-name z-html&quot;&gt;bg-success&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-basic&quot;&gt;&lt;span class=&quot;z-meta z-tag z-block z-any z-html&quot;&gt;&lt;span class=&quot;z-meta z-attribute-with-value z-class z-html&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-html&quot;&gt;            &lt;span class=&quot;z-meta z-class-name z-html&quot;&gt;{%&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-class-name z-html&quot;&gt;elif&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-class-name z-html&quot;&gt;message.tags&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-class-name z-html&quot;&gt;==&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-class-name z-html&quot;&gt;&amp;#39;info&amp;#39;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-class-name z-html&quot;&gt;%}&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-basic&quot;&gt;&lt;span class=&quot;z-meta z-tag z-block z-any z-html&quot;&gt;&lt;span class=&quot;z-meta z-attribute-with-value z-class z-html&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-html&quot;&gt;                &lt;span class=&quot;z-meta z-class-name z-html&quot;&gt;bg-info&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-basic&quot;&gt;&lt;span class=&quot;z-meta z-tag z-block z-any z-html&quot;&gt;&lt;span class=&quot;z-meta z-attribute-with-value z-class z-html&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-html&quot;&gt;            &lt;span class=&quot;z-meta z-class-name z-html&quot;&gt;{%&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-class-name z-html&quot;&gt;elif&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-class-name z-html&quot;&gt;message.tags&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-class-name z-html&quot;&gt;==&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-class-name z-html&quot;&gt;&amp;#39;warning&amp;#39;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-class-name z-html&quot;&gt;%}&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-basic&quot;&gt;&lt;span class=&quot;z-meta z-tag z-block z-any z-html&quot;&gt;&lt;span class=&quot;z-meta z-attribute-with-value z-class z-html&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-html&quot;&gt;                &lt;span class=&quot;z-meta z-class-name z-html&quot;&gt;bg-warning&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-basic&quot;&gt;&lt;span class=&quot;z-meta z-tag z-block z-any z-html&quot;&gt;&lt;span class=&quot;z-meta z-attribute-with-value z-class z-html&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-html&quot;&gt;            &lt;span class=&quot;z-meta z-class-name z-html&quot;&gt;{%&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-class-name z-html&quot;&gt;elif&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-class-name z-html&quot;&gt;message.tags&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-class-name z-html&quot;&gt;==&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-class-name z-html&quot;&gt;&amp;#39;error&amp;#39;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-class-name z-html&quot;&gt;%}&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-basic&quot;&gt;&lt;span class=&quot;z-meta z-tag z-block z-any z-html&quot;&gt;&lt;span class=&quot;z-meta z-attribute-with-value z-class z-html&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-html&quot;&gt;                &lt;span class=&quot;z-meta z-class-name z-html&quot;&gt;bg-error&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-basic&quot;&gt;&lt;span class=&quot;z-meta z-tag z-block z-any z-html&quot;&gt;&lt;span class=&quot;z-meta z-attribute-with-value z-class z-html&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-html&quot;&gt;            &lt;span class=&quot;z-meta z-class-name z-html&quot;&gt;{%&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-class-name z-html&quot;&gt;endif&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-class-name z-html&quot;&gt;%}&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-basic&quot;&gt;&lt;span class=&quot;z-meta z-tag z-block z-any z-html&quot;&gt;&lt;span class=&quot;z-meta z-attribute-with-value z-class z-html&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-html&quot;&gt;        &lt;span class=&quot;z-punctuation z-definition z-string z-end z-html&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-tag z-end z-html&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-basic&quot;&gt;        &lt;span class=&quot;z-meta z-tag z-block z-any z-html&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-tag z-begin z-html&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-tag z-block z-any z-html&quot;&gt;div&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-tag z-end z-html&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-basic&quot;&gt;        &lt;span class=&quot;z-meta z-tag z-inline z-any z-html&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-tag z-begin z-html&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-tag z-inline z-any z-html&quot;&gt;i&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-attribute-with-value z-class z-html&quot;&gt;&lt;span class=&quot;z-entity z-other z-attribute-name z-class z-html&quot;&gt;class&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-html&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-html&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-html&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-html&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-basic&quot;&gt;&lt;span class=&quot;z-meta z-tag z-inline z-any z-html&quot;&gt;&lt;span class=&quot;z-meta z-attribute-with-value z-class z-html&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-html&quot;&gt;            &lt;span class=&quot;z-meta z-class-name z-html&quot;&gt;bi&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-basic&quot;&gt;&lt;span class=&quot;z-meta z-tag z-inline z-any z-html&quot;&gt;&lt;span class=&quot;z-meta z-attribute-with-value z-class z-html&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-html&quot;&gt;            &lt;span class=&quot;z-meta z-class-name z-html&quot;&gt;text-lg&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-basic&quot;&gt;&lt;span class=&quot;z-meta z-tag z-inline z-any z-html&quot;&gt;&lt;span class=&quot;z-meta z-attribute-with-value z-class z-html&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-html&quot;&gt;            &lt;span class=&quot;z-meta z-class-name z-html&quot;&gt;{%&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-class-name z-html&quot;&gt;if&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-class-name z-html&quot;&gt;message.tags&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-class-name z-html&quot;&gt;==&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-class-name z-html&quot;&gt;&amp;#39;success&amp;#39;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-class-name z-html&quot;&gt;%}&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-basic&quot;&gt;&lt;span class=&quot;z-meta z-tag z-inline z-any z-html&quot;&gt;&lt;span class=&quot;z-meta z-attribute-with-value z-class z-html&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-html&quot;&gt;                &lt;span class=&quot;z-meta z-class-name z-html&quot;&gt;bi-check-circle-fill&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-class-name z-html&quot;&gt;text-success&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-basic&quot;&gt;&lt;span class=&quot;z-meta z-tag z-inline z-any z-html&quot;&gt;&lt;span class=&quot;z-meta z-attribute-with-value z-class z-html&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-html&quot;&gt;            &lt;span class=&quot;z-meta z-class-name z-html&quot;&gt;{%&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-class-name z-html&quot;&gt;elif&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-class-name z-html&quot;&gt;message.tags&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-class-name z-html&quot;&gt;==&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-class-name z-html&quot;&gt;&amp;#39;info&amp;#39;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-class-name z-html&quot;&gt;%}&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-basic&quot;&gt;&lt;span class=&quot;z-meta z-tag z-inline z-any z-html&quot;&gt;&lt;span class=&quot;z-meta z-attribute-with-value z-class z-html&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-html&quot;&gt;                &lt;span class=&quot;z-meta z-class-name z-html&quot;&gt;bi-info-circle-fill&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-class-name z-html&quot;&gt;text-info&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-basic&quot;&gt;&lt;span class=&quot;z-meta z-tag z-inline z-any z-html&quot;&gt;&lt;span class=&quot;z-meta z-attribute-with-value z-class z-html&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-html&quot;&gt;            &lt;span class=&quot;z-meta z-class-name z-html&quot;&gt;{%&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-class-name z-html&quot;&gt;elif&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-class-name z-html&quot;&gt;message.tags&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-class-name z-html&quot;&gt;==&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-class-name z-html&quot;&gt;&amp;#39;warning&amp;#39;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-class-name z-html&quot;&gt;%}&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-basic&quot;&gt;&lt;span class=&quot;z-meta z-tag z-inline z-any z-html&quot;&gt;&lt;span class=&quot;z-meta z-attribute-with-value z-class z-html&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-html&quot;&gt;                &lt;span class=&quot;z-meta z-class-name z-html&quot;&gt;bi-exclamation-triangle-fill&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-class-name z-html&quot;&gt;text-warning&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-basic&quot;&gt;&lt;span class=&quot;z-meta z-tag z-inline z-any z-html&quot;&gt;&lt;span class=&quot;z-meta z-attribute-with-value z-class z-html&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-html&quot;&gt;            &lt;span class=&quot;z-meta z-class-name z-html&quot;&gt;{%&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-class-name z-html&quot;&gt;elif&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-class-name z-html&quot;&gt;message.tags&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-class-name z-html&quot;&gt;==&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-class-name z-html&quot;&gt;&amp;#39;error&amp;#39;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-class-name z-html&quot;&gt;%}&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-basic&quot;&gt;&lt;span class=&quot;z-meta z-tag z-inline z-any z-html&quot;&gt;&lt;span class=&quot;z-meta z-attribute-with-value z-class z-html&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-html&quot;&gt;                &lt;span class=&quot;z-meta z-class-name z-html&quot;&gt;bi-exclamation-circle-fill&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-class-name z-html&quot;&gt;text-error&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-basic&quot;&gt;&lt;span class=&quot;z-meta z-tag z-inline z-any z-html&quot;&gt;&lt;span class=&quot;z-meta z-attribute-with-value z-class z-html&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-html&quot;&gt;            &lt;span class=&quot;z-meta z-class-name z-html&quot;&gt;{%&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-class-name z-html&quot;&gt;endif&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-class-name z-html&quot;&gt;%}&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-basic&quot;&gt;&lt;span class=&quot;z-meta z-tag z-inline z-any z-html&quot;&gt;&lt;span class=&quot;z-meta z-attribute-with-value z-class z-html&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-html&quot;&gt;        &lt;span class=&quot;z-punctuation z-definition z-string z-end z-html&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-tag z-end z-html&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-tag z-inline z-any z-html&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-tag z-begin z-html&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-tag z-inline z-any z-html&quot;&gt;i&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-tag z-end z-html&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-basic&quot;&gt;        &lt;span class=&quot;z-meta z-tag z-inline z-any z-html&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-tag z-begin z-html&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-tag z-inline z-any z-html&quot;&gt;span&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-tag z-end z-html&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;{{ message }}&lt;span class=&quot;z-meta z-tag z-inline z-any z-html&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-tag z-begin z-html&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-tag z-inline z-any z-html&quot;&gt;span&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-tag z-end z-html&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-basic&quot;&gt;    &lt;span class=&quot;z-meta z-tag z-block z-any z-html&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-tag z-begin z-html&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-tag z-block z-any z-html&quot;&gt;div&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-tag z-end z-html&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;In our case, we just needed to add three lines:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;x-data is needed to ‘turn on’ AlpineJS in this element.&lt;&#x2F;li&gt;
&lt;li&gt;@click is an attribute that takes a function and executes on a click event. Click is not the only event, any event can be placed after @, including, very helpfully, HTMX events.&lt;&#x2F;li&gt;
&lt;li&gt;$el is a ‘magic’ directive which returns the current DOM element.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;With that, this code does two things:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;When the element is clicked, replace the 5000ms (5s) delay with a 1000ms (1s) delay.&lt;&#x2F;li&gt;
&lt;li&gt;When the animationend event is raised, remove the current element.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;That’s all the JavaScript we need to make this notification &lt;em&gt;as dynamic as a SPA app&lt;&#x2F;em&gt; with a fraction of the code.&lt;&#x2F;p&gt;
&lt;p&gt;To integrate this message system in my Django application, I created a simple middleware that adds the following snippet to the end of any response that was made using HTMX:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; class=&quot;language-python z-code&quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-class z-python&quot;&gt;&lt;span class=&quot;z-storage z-type z-class z-python&quot;&gt;&lt;span class=&quot;z-keyword z-declaration z-class z-python&quot;&gt;class&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-class z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;HtmxMessagesMiddleware&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-class z-inheritance z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-inheritance z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-class z-inheritance z-python&quot;&gt;&lt;span class=&quot;z-entity z-other z-inherited-class z-python&quot;&gt;MiddlewareMixin&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-inheritance z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-class z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-class z-begin z-python&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;    &lt;span class=&quot;z-comment z-block z-documentation z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-begin z-python&quot;&gt;&amp;quot;&amp;quot;&amp;quot;&lt;&#x2F;span&gt;Middleware to append the message partial to HTMX responses with messages.&lt;span class=&quot;z-punctuation z-definition z-comment z-end z-python&quot;&gt;&amp;quot;&amp;quot;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function z-python&quot;&gt;    &lt;span class=&quot;z-storage z-type z-function z-python&quot;&gt;&lt;span class=&quot;z-keyword z-declaration z-function z-python&quot;&gt;def&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;process_response&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-python&quot;&gt;&lt;span class=&quot;z-variable z-parameter z-python&quot;&gt;self&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-parameters z-python&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-parameter z-python&quot;&gt;request&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-annotation z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-annotation z-parameter z-python&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;HttpRequest&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-parameters z-python&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-parameter z-python&quot;&gt;response&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-annotation z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-annotation z-parameter z-python&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;HttpResponse&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-python&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-annotation z-return z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-annotation z-return z-python&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;HttpResponse&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-function z-begin z-python&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;        &lt;span class=&quot;z-comment z-block z-documentation z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-begin z-python&quot;&gt;&amp;quot;&amp;quot;&amp;quot;&lt;&#x2F;span&gt;Process the response and chain message partials for HTMX requests.&lt;span class=&quot;z-punctuation z-definition z-comment z-end z-python&quot;&gt;&amp;quot;&amp;quot;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;        &lt;span class=&quot;z-comment z-line z-number-sign z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-python&quot;&gt;#&lt;&#x2F;span&gt; Is this request not an HTMX request? Let the normal response continue
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;        &lt;span class=&quot;z-meta z-statement z-conditional z-if z-python&quot;&gt;&lt;span class=&quot;z-keyword z-control z-conditional z-if z-python&quot;&gt;if&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-logical z-python&quot;&gt;not&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;request&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-python&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;headers&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-python&quot;&gt;.&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;get&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-python&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-python&quot;&gt;HX-Request&lt;span class=&quot;z-punctuation z-definition z-string z-end z-python&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-block z-conditional z-if z-python&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;            &lt;span class=&quot;z-keyword z-control z-flow z-return z-python&quot;&gt;return&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;response&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;        &lt;span class=&quot;z-comment z-line z-number-sign z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-python&quot;&gt;#&lt;&#x2F;span&gt; If there are notifications for this request
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;        &lt;span class=&quot;z-meta z-statement z-conditional z-if z-python&quot;&gt;&lt;span class=&quot;z-keyword z-control z-conditional z-if z-python&quot;&gt;if&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;messages&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-python&quot;&gt;.&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;get_messages&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;request&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-block z-conditional z-if z-python&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;            &lt;span class=&quot;z-comment z-line z-number-sign z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-python&quot;&gt;#&lt;&#x2F;span&gt; Render the notification template
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;            &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;message_html&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-python&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;render_to_string&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-python&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-python&quot;&gt;partials&#x2F;messages-update-partial.html&lt;span class=&quot;z-punctuation z-definition z-string z-end z-python&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-arguments z-python&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-parameter z-python&quot;&gt;request&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-python&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;request&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;            &lt;span class=&quot;z-comment z-line z-number-sign z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-python&quot;&gt;#&lt;&#x2F;span&gt; And add that at the end of the already existing response.
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;            &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;response&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-python&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;content&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-python&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;response&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-python&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;content&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-arithmetic z-python&quot;&gt;+&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;message_html&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-python&quot;&gt;.&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;encode&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;        &lt;span class=&quot;z-keyword z-control z-flow z-return z-python&quot;&gt;return&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;response&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;To configure how this should behave, we only have to wrap the component inside this div: &lt;code&gt;&amp;lt;div id=&quot;messages&quot; hx-swap-oob=&quot;beforeend&quot;&amp;gt;&lt;&#x2F;code&gt;. The &lt;code&gt;hx-swap-oob&lt;&#x2F;code&gt; attribute means that the contents of the div should be swapped in a different place than the main hypermedia. This allows us to ‘tag along’ this hypermedia snippet along with form errors, for example. The &lt;code&gt;beforeend&lt;&#x2F;code&gt; argument means it will swap it at the end of the div, so it is swapped in at the bottom.&lt;&#x2F;p&gt;
&lt;p&gt;The last thing we have to do, is put the following HTML in the base.html file:&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;&amp;lt;div id=&amp;quot;messages&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        class=&amp;quot;z-50 fixed inset-0 flex flex-col-reverse items-end justify-start h-screen w-screen&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        style=&amp;quot;pointer-events:none&amp;quot;&amp;gt;{% include &amp;quot;partials&#x2F;messages-partial.html&amp;quot; %}&amp;lt;&#x2F;div&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;It styles the div so that it is above everything else (&lt;code&gt;z-50&lt;&#x2F;code&gt;), puts it on the bottom left (&lt;code&gt;inset-0&lt;&#x2F;code&gt;) and reverses the order so the elements go from the bottom up. The include statement references our previous HTML.&lt;&#x2F;p&gt;
&lt;p&gt;And that’s it. We have a full notification system that is responsive, modern and integrated with our messages framework all with minimal code and only a few lines of client side scripting and no meaningful client-side state or logic.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;&lt;span class=&quot;not-prose&quot;&gt;
    &lt;a class=&quot;tl-link text-2xl&quot; 
    href=&quot;#conclusion&quot; 
    aria-label=&quot;Anchor link for: conclusion&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;span&gt;
Conclusion&lt;&#x2F;h2&gt;
&lt;p&gt;I hope I have convinced you that modern applications with good UX can be made with HTMX and do not require SPAs per se. Of course, not all applications are a good fit for hypermedia, Carson has already written a &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;htmx.org&#x2F;essays&#x2F;when-to-use-hypermedia&#x2F;&quot;&gt;great article&lt;&#x2F;a&gt; on that. But I always apply the 80&#x2F;20 rule: 80 percent of websites are Wordpress, and of the other 20%, 80% websites are mostly fancy CRUD interfaces. In those cases, using Hypermedia can significantly decrease development complexity, with all the advantages that brings.&lt;&#x2F;p&gt;
&lt;p&gt;In my next blog post, I want to show some more advanced examples of creating interactive elements using HTMX and Django, so stay tuned for that.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;further-reading&quot;&gt;&lt;span class=&quot;not-prose&quot;&gt;
    &lt;a class=&quot;tl-link text-2xl&quot; 
    href=&quot;#further-reading&quot; 
    aria-label=&quot;Anchor link for: further-reading&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;span&gt;
Further reading&lt;&#x2F;h2&gt;
&lt;p&gt;Carson Gross is a great and engaging writer while also being a memelord at the same time. It’s a combo that seems to be working well :).&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;x.com&#x2F;htmx_org&quot;&gt;His chaotic Twitter page&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;htmx.org&#x2F;essays&#x2F;&quot;&gt;His great articles&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Hypermedia systems: a book written by Carson Gross, Adam Stepinski and Deniz Akşimşek which goes into the philosophy of Hypermedia. It is really easy to follow and I highly recommend reading it. The book is free to read online or about 10 euros as an ebook in most online retail stores.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;grugbrain.dev&#x2F;&quot;&gt;The Grug Brained Developer&lt;&#x2F;a&gt;: a hilarious article (??) in caveman language that actually contains some great advice.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;I also want to highlight the &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;akd7u69k27k?feature=shared&quot;&gt;Bugbytes Youtube channel&lt;&#x2F;a&gt;. He has a lot of excellent videos about how to get hands on with HTMX and Django, as well as how you combine with other libraries like DaisyUI.&lt;&#x2F;p&gt;
&lt;p&gt;P.S: I wasn’t listening to anything in particular when writing this post, but lately I have been listening to the album &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=GvdPkclVeFE&amp;amp;list=PLP9SWLrsGSn93_66KMQBGVT-n5ASl5yhc&quot;&gt;Garden of Hera&lt;&#x2F;a&gt; from OGENE. Dutch folks from my age might remember them going to the Junior Eurovision Contest in 2007. With this album, they have really chosen their own path and it shows. It’s nice to see a bit more of that in the music business.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>The last missing piece of my Markdown setup and a small update</title>
        <published>2024-03-10T00:00:00+00:00</published>
        <updated>2024-03-10T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              TeaDrinkingProgrammer
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://teadrinkingprogrammer.github.io/blog/last-missing-piece-of-my-markdown-setup/"/>
        <id>https://teadrinkingprogrammer.github.io/blog/last-missing-piece-of-my-markdown-setup/</id>
        
        <content type="html" xml:base="https://teadrinkingprogrammer.github.io/blog/last-missing-piece-of-my-markdown-setup/">&lt;h1 id=&quot;a-small-update&quot;&gt;&lt;span class=&quot;not-prose&quot;&gt;
    &lt;a class=&quot;tl-link text-2xl&quot; 
    href=&quot;#a-small-update&quot; 
    aria-label=&quot;Anchor link for: a-small-update&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;span&gt;
A small update&lt;&#x2F;h1&gt;
&lt;p&gt;Hi all! It’s been a while since my last post and, before I start with the main post, I would like to give a small update of what has happened in the meantime.&lt;&#x2F;p&gt;
&lt;p&gt;I put my last post up on &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;tildes.net&#x2F;~tech&#x2F;1dqs&#x2F;the_markup_iceberg&quot;&gt;Tildes&lt;&#x2F;a&gt; and the reactions were very insightful and helpful: some people liked my style, some people thought that my post was unfocused and the intro felt decoupled from the rest of the story, and I must say I can’t disagree. That’s why I have rewritten parts of the last post based on that feedback. Thanks again to all people who gave feedback, be it positive or negative. It has made me aware of some blind spots in my writing.&lt;&#x2F;p&gt;
&lt;p&gt;I also got feedback from &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;emilybau.com&#x2F;&quot;&gt;Emily Baucom (Alias Oslypsis)&lt;&#x2F;a&gt; that my website could use a logo and that she could help me make one. The end result is the wonderful logo you can see in the top bar as a favicon and the logo on the homepage. I love the design!&lt;&#x2F;p&gt;
&lt;p&gt;With that out of the way, let’s get into the story of today: the last missing piece of my Markdown setup.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;the-last-missing-piece-of-my-markdown-setup&quot;&gt;&lt;span class=&quot;not-prose&quot;&gt;
    &lt;a class=&quot;tl-link text-2xl&quot; 
    href=&quot;#the-last-missing-piece-of-my-markdown-setup&quot; 
    aria-label=&quot;Anchor link for: the-last-missing-piece-of-my-markdown-setup&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;span&gt;
The last missing piece of my Markdown setup&lt;&#x2F;h1&gt;
&lt;p&gt;One type of feedback I got, was on my spelling. This issue mainly had to do with the fact that I was overconfident in my ability to write correct English and thus didn’t see the need for a spellchecker. I thus needed a spellchecker, and I wouldn’t be the Teadrinkingprogrammer if I didn’t look for some arcane solution.&lt;&#x2F;p&gt;
&lt;p&gt;I first needed to find something that met my requirements. My requirements were the same as always:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Preferably open source&lt;&#x2F;li&gt;
&lt;li&gt;Integrates with my existing tooling (this being &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.zettlr.com&#x2F;&quot;&gt;Zettlr&lt;&#x2F;a&gt; or VS Code)&lt;&#x2F;li&gt;
&lt;li&gt;Good spellchecking, obviously&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;I first started digging into the settings of Zettlr to see if it had something to offer besides the default spellchecker: Hunspell. Hunspell is a simple spellchecker used in most browsers. It is a great default, but has pretty mediocre spellchecking. Besides Hunspell, I saw that there was an option to connect with a &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;languagetool.org&#x2F;&quot;&gt;LanguageTool&lt;&#x2F;a&gt; server. This immediately piqued my interest, as I had already heard a lot of great things about it.&lt;&#x2F;p&gt;
&lt;p&gt;For those who haven’t heard of LanguageTool: it is to Grammarly what &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.deepl.com&#x2F;translator&quot;&gt;Deepl&lt;&#x2F;a&gt; is to Google Translate: more powerful AI versions that are more privacy-friendly to boot. Like Grammarly, LanguageTool suggests alternatives for style and grammar mistakes but unlike Grammarly, it is open source and has a self-hostable version. I have also found that it just gives better feedback, specifically when writing in Dutch.&lt;&#x2F;p&gt;
&lt;p&gt;When I had decided to use LanguageTool, I also found out that Zettlr had a &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;docs.zettlr.com&#x2F;en&#x2F;guides&#x2F;languagetool-local&#x2F;&quot;&gt;tutorial&lt;&#x2F;a&gt; on their website about self-hosting it. It points to &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;silvio&#x2F;docker-languagetool&quot;&gt;this Docker image&lt;&#x2F;a&gt;. Docker is an amazing tool, and works especially well with Linux or macOS. If you are using the Docker image, I recommend not using the N-grams files, as they are quite heavy and the base server is already quite slow on my, admittedly old, laptop.&lt;&#x2F;p&gt;
&lt;p&gt;I am, however, using Windows at the moment because I need to work with some Windows-only software. This meant that running the server in the Docker container incurred quite some overhead and the CPU-usage felt a bit overkill for what was essentially an advanced spell-checker, so I wanted to get it to work on Windows directly. This turned out to be a lot easier than expected.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;getting-languagetool-to-run-on-windows&quot;&gt;&lt;span class=&quot;not-prose&quot;&gt;
    &lt;a class=&quot;tl-link text-2xl&quot; 
    href=&quot;#getting-languagetool-to-run-on-windows&quot; 
    aria-label=&quot;Anchor link for: getting-languagetool-to-run-on-windows&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;span&gt;
Getting LanguageTool to run on Windows&lt;&#x2F;h1&gt;
&lt;p&gt;So how do you get LanguageTool to work on Windows? Well, you’re in luck, because LanguageTool have pretty clear instructions on their &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;dev.languagetool.org&#x2F;http-server&quot;&gt;website&lt;&#x2F;a&gt;.
It pretty much comes down to these steps:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;Install Java 17, which is as easy as &lt;code&gt;winget install Oracle.JDK.17&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Download and unpack the zip file from the link below “Getting the server”.&lt;&#x2F;li&gt;
&lt;li&gt;Make a script file to run the server:
Batch file:&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;pre data-lang=&quot;sh&quot; class=&quot;language-sh z-code&quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;@echo&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; off&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-support z-function z-cd z-shell&quot;&gt;cd&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; &lt;span class=&quot;z-string z-quoted z-double z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;C:\Path\To\LanguageTool\Folder&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;java&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt;&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;cp&lt;&#x2F;span&gt; languagetool-server.jar org.languagetool.server.HTTPServer&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; --&lt;&#x2F;span&gt;port&lt;&#x2F;span&gt; 8010&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; --&lt;&#x2F;span&gt;public&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; --&lt;&#x2F;span&gt;config&lt;&#x2F;span&gt; server.properties&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;or a Nushell file like me:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; class=&quot;language-sh z-code&quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-support z-function z-cd z-shell&quot;&gt;cd&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; C:&lt;span class=&quot;z-constant z-character z-escape z-shell&quot;&gt;\P&lt;&#x2F;span&gt;ath&lt;span class=&quot;z-constant z-character z-escape z-shell&quot;&gt;\T&lt;&#x2F;span&gt;o&lt;span class=&quot;z-constant z-character z-escape z-shell&quot;&gt;\L&lt;&#x2F;span&gt;anguageTool&lt;span class=&quot;z-constant z-character z-escape z-shell&quot;&gt;\F&lt;&#x2F;span&gt;older&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-logical z-continue z-shell&quot;&gt;;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;java&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt;&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;cp&lt;&#x2F;span&gt; languagetool-server.jar org.languagetool.server.HTTPServer&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; --&lt;&#x2F;span&gt;port&lt;&#x2F;span&gt; 8010&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; --&lt;&#x2F;span&gt;public&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; --&lt;&#x2F;span&gt;config&lt;&#x2F;span&gt; server.properties&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;(I am probably going to make a blog post about Nushell some day: TLDR: it’s amazing)&lt;&#x2F;p&gt;
&lt;ol start=&quot;4&quot;&gt;
&lt;li&gt;Run the server by running the file. Put it somewhere you can get to easily, like the desktop, taskbar, etc.&lt;&#x2F;li&gt;
&lt;li&gt;Profit!&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;Actually, hold onto your profit for a bit if you want to use Zettlr with LanguageTool.&lt;&#x2F;p&gt;
&lt;p&gt;Getting that to work also turns out to be a piece of cake. Just go into settings → Spellchecking and set LanguageTool Provider to Custom server. Set the server URL to &lt;code&gt;http:&#x2F;&#x2F;localhost:8010&#x2F;&lt;&#x2F;code&gt; without Username or API key. Above these settings you can also set you Mother tongue. This enables LanguageTool to scan for so-called &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;False_friend&quot;&gt;“false friends”&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;figure&gt;
    &lt;img class=&quot;m-auto&quot; src=&quot;https:&amp;#x2F;&amp;#x2F;teadrinkingprogrammer.github.io&#x2F;assets&amp;#x2F;languagetool_settings.png&quot;  alt=&quot;Mother tongue is set to &amp;#x27;Dutch (Netherlands)&amp;#x27;, the LanguageTool setting to Custom server. The server URL is set to http:&amp;#x2F;&amp;#x2F;localhost:8010&amp;#x2F; and the Username and API key fields are empty.&quot;&gt;
    
    &lt;figcaption class=&quot;flex justify-center italic&quot;&gt;An image showing the Zettlr spellchecking settings page.&lt;&#x2F;figcaption&gt;
    
&lt;&#x2F;figure&gt;
&lt;p&gt;When writing, you might have to manually set the language in the bottom-right, as the automatic language detection on Windows is worse than macOS and Linux. Otherwise, I have found this solution has worked well.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;using-languagetool-day-to-day&quot;&gt;&lt;span class=&quot;not-prose&quot;&gt;
    &lt;a class=&quot;tl-link text-2xl&quot; 
    href=&quot;#using-languagetool-day-to-day&quot; 
    aria-label=&quot;Anchor link for: using-languagetool-day-to-day&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;span&gt;
Using LanguageTool day-to-day&lt;&#x2F;h1&gt;
&lt;p&gt;Now that I have explained &lt;em&gt;why&lt;&#x2F;em&gt; you would want to use LanguageTool and shown you &lt;em&gt;how&lt;&#x2F;em&gt; you can use LanguageTool, you’re probably curious about the pros and cons of using it day-to-day.&lt;&#x2F;p&gt;
&lt;p&gt;The pros are simple: LanguageTool is more powerful than any spellchecker I have used until now. It is probably somewhere around two orders of magnitude better than Word. This is both due to the kind of feedback it gives and how it’s formulated.&lt;&#x2F;p&gt;
&lt;p&gt;The cons are mainly due to the fact that I am self-hosting an AI-server on a 7-year-old laptop. It is not &lt;em&gt;slow&lt;&#x2F;em&gt;, but it isn’t instantaneous either. I have adapted by changing my workflow to booting up the server when I am near the end of typing out a section, then wait for a bit and correct the mistakes it has found. It is not ideal, but it is a compromise I can live with.&lt;&#x2F;p&gt;
&lt;p&gt;The second disadvantage is that the open source server implementation of LanguageTool misses some features from the paid version, notably a dictionary function. This is a bit annoying because you have to ignore some warnings about names and such, but it isn’t a dealbreaker.&lt;&#x2F;p&gt;
&lt;p&gt;Some of these issues could be fixed on the Zettlr side (result caching and local dictionary), and I have opened some issues, but I understand that this is probably not their priority.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;conclusion&quot;&gt;&lt;span class=&quot;not-prose&quot;&gt;
    &lt;a class=&quot;tl-link text-2xl&quot; 
    href=&quot;#conclusion&quot; 
    aria-label=&quot;Anchor link for: conclusion&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;span&gt;
Conclusion&lt;&#x2F;h1&gt;
&lt;p&gt;LanguageTool is a great piece of software and self-hosting it is easier than I thought. It has some drawbacks, but they aren’t dealbreakers in my opinion. All in all, I am quite happy with how my set-up has turned out.&lt;&#x2F;p&gt;
&lt;p&gt;As for the next blog post: it’s probably going to take a while and the posts are going to stay inconsistent for now, as I have a lot going on at the moment.&lt;&#x2F;p&gt;
&lt;p&gt;As always, if you want to get notified when I post something on here, you can subscribe to the mailing list by filling in the form below. You can also subscribe to the RSS feed if that is more your thing. Thank you for reading my blog and until next time!&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>The Markup iceberg</title>
        <published>2024-01-17T00:00:00+00:00</published>
        <updated>2024-01-17T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              TeaDrinkingProgrammer
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://teadrinkingprogrammer.github.io/blog/markup-iceberg/"/>
        <id>https://teadrinkingprogrammer.github.io/blog/markup-iceberg/</id>
        
        <content type="html" xml:base="https://teadrinkingprogrammer.github.io/blog/markup-iceberg/">&lt;h1 id=&quot;word-and-wysiwyg-editors&quot;&gt;&lt;span class=&quot;not-prose&quot;&gt;
    &lt;a class=&quot;tl-link text-2xl&quot; 
    href=&quot;#word-and-wysiwyg-editors&quot; 
    aria-label=&quot;Anchor link for: word-and-wysiwyg-editors&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;span&gt;
Word and WYSIWYG editors&lt;&#x2F;h1&gt;
&lt;p&gt;Most people use applications like Word and Google Docs for their writing needs. It is not hard to see why: they don’t have much in the way of a learning curve, and they can do pretty much all you need it to do. These editors are so-called “What You See Is What You Get” editors, and they were invented in the early 90s to make it easier for the average user to edit documents. As they are an integral part of most people’s work-life, they have clearly succeeded in this goal.&lt;&#x2F;p&gt;
&lt;p&gt;They are so ubiquitous, in fact, that most people can’t imagine many other ways of working with text. This is a shame, because the “Word” way of doing things has some disadvantages. The most important one is the amount of clicking. In Word, if you want to make a piece of text look like a title, you need to stop what you are doing, highlight the piece of text, click the “title” button, press enter and hope that your subsequent text looks normal. Another one is a major reason why I went looking for alternatives: Word and PowerPoint do not work on Linux, which is my preferred operating system. Yes, you can use Word Online, but that is one of the worst apps I use on a daily basis after Teams (something something Microsoft).&lt;&#x2F;p&gt;
&lt;p&gt;There are many more little annoyances, and I got fed up with them. This is when I decided to see how this can be done differently: I fell down the rabbit hole of Markdown, and I want to show you how many things can be replaced with a different paradigm: Markdown and front formatters.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;top-of-the-iceberg-markdown-as-text&quot;&gt;&lt;span class=&quot;not-prose&quot;&gt;
    &lt;a class=&quot;tl-link text-2xl&quot; 
    href=&quot;#top-of-the-iceberg-markdown-as-text&quot; 
    aria-label=&quot;Anchor link for: top-of-the-iceberg-markdown-as-text&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;span&gt;
Top of the iceberg: Markdown as text&lt;&#x2F;h1&gt;
&lt;p&gt;Many people are first introduced to Markdown by GitHub or some other developer-oriented tool. In these contexts, Markdown is mainly used to make some simple files like READMEs. Some other use-cases include GitHub Wikis and if you have worked with some of these kinds of text-first tools, you may have noticed how nice using Markdown is. It takes a bit of time to adjust, but it is quite intuitive and very readable as plain text.  Yes, at first you forget some things like the markup for a link, but you eventually get the hang of it. When you do, you can type much faster. You can even use Markdown in a WYSIWYG editor, which is the best of both worlds: you see your changes, but you can still type fast.&lt;&#x2F;p&gt;
&lt;p&gt;You may think to yourself: “Why is this guy so enthusiastic about Markdown. Yes it is nice, but so far, I’ve seen nothing revolutionary”
You are right. The power of Markdown is not in text alone.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;level-2-layout-as-configuration&quot;&gt;&lt;span class=&quot;not-prose&quot;&gt;
    &lt;a class=&quot;tl-link text-2xl&quot; 
    href=&quot;#level-2-layout-as-configuration&quot; 
    aria-label=&quot;Anchor link for: level-2-layout-as-configuration&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;span&gt;
Level 2: Layout as configuration&lt;&#x2F;h1&gt;
&lt;p&gt;Markdown on its own is not very reMarkable (see what I did there): the power comes when it is combined with a layout configuration. Explaining this idea is easier with some examples. Take this very blog post you are reading right now. It is written in Markdown and then taken by &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.getzola.org&#x2F;documentation&#x2F;getting-started&#x2F;overview&#x2F;&quot;&gt;Zola&lt;&#x2F;a&gt; to be rendered with a template. Three types of layout are used:&lt;&#x2F;p&gt;
&lt;h2 id=&quot;template-level&quot;&gt;&lt;span class=&quot;not-prose&quot;&gt;
    &lt;a class=&quot;tl-link text-2xl&quot; 
    href=&quot;#template-level&quot; 
    aria-label=&quot;Anchor link for: template-level&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;span&gt;
Template level&lt;&#x2F;h2&gt;
&lt;p&gt;The template layout is an HTML file. In this HTML file, I define how everything in and around the text should look. In the example, I have the text of a blog post which is made purple by the Tailwind class.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;html&quot; class=&quot;language-html z-code&quot;&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;z-text z-html z-basic&quot;&gt;...
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-basic&quot;&gt;&lt;span class=&quot;z-meta z-tag z-block z-any z-html&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-tag z-begin z-html&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-tag z-block z-any z-html&quot;&gt;div&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-attribute-with-value z-class z-html&quot;&gt;&lt;span class=&quot;z-entity z-other z-attribute-name z-class z-html&quot;&gt;class&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-html&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-html&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-html&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-html&quot;&gt;&lt;span class=&quot;z-meta z-class-name z-html&quot;&gt;text-purple-300&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-end z-html&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-tag z-end z-html&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-basic&quot;&gt;{{ page.content | safe }}
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-basic&quot;&gt;&lt;span class=&quot;z-meta z-tag z-block z-any z-html&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-tag z-begin z-html&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-tag z-block z-any z-html&quot;&gt;div&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-tag z-end z-html&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-basic&quot;&gt;...
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The Template is where everything that is unrelated to the text should be put: it shouldn’t matter what the text is. The things that do change should be defined in the:&lt;&#x2F;p&gt;
&lt;h2 id=&quot;frontformatter&quot;&gt;&lt;span class=&quot;not-prose&quot;&gt;
    &lt;a class=&quot;tl-link text-2xl&quot; 
    href=&quot;#frontformatter&quot; 
    aria-label=&quot;Anchor link for: frontformatter&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;span&gt;
Frontformatter&lt;&#x2F;h2&gt;
&lt;p&gt;Some things do change per text. In this case, front formatters can be used. Front formatters differ per use-case and app. The following front formatter is for this very blog post:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;toml&quot; class=&quot;language-toml z-code&quot;&gt;&lt;code class=&quot;language-toml&quot; data-lang=&quot;toml&quot;&gt;&lt;span class=&quot;z-source z-toml&quot;&gt;&lt;span class=&quot;z-invalid z-illegal z-toml&quot;&gt;+++&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-toml&quot;&gt;&lt;span class=&quot;z-meta z-tag z-key z-toml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-toml&quot;&gt;title&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-definition z-key-value z-toml&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-basic z-toml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-toml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;The Markup iceberg&lt;span class=&quot;z-punctuation z-definition z-string z-end z-toml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-toml&quot;&gt;&lt;span class=&quot;z-meta z-tag z-key z-toml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-toml&quot;&gt;date&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-definition z-key-value z-toml&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-other z-datetime z-toml&quot;&gt;2024-01-17&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-toml&quot;&gt;&lt;span class=&quot;z-meta z-tag z-key z-toml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-toml&quot;&gt;draft&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-definition z-key-value z-toml&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-language z-toml&quot;&gt;false&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-toml&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-toml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-table z-begin z-toml&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-tag z-table z-toml&quot;&gt;&lt;span class=&quot;z-entity z-name z-table z-toml&quot;&gt;taxonomies&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-table z-end z-toml&quot;&gt;]&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-toml&quot;&gt;&lt;span class=&quot;z-meta z-tag z-key z-toml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-toml&quot;&gt;categories&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-definition z-key-value z-toml&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-definition z-array z-begin z-toml&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-basic z-toml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-toml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;software&lt;span class=&quot;z-punctuation z-definition z-string z-end z-toml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-array z-end z-toml&quot;&gt;]&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-toml&quot;&gt;&lt;span class=&quot;z-meta z-tag z-key z-toml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-toml&quot;&gt;tags&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-definition z-key-value z-toml&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-definition z-array z-begin z-toml&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-basic z-toml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-toml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;markdown&lt;span class=&quot;z-punctuation z-definition z-string z-end z-toml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-array z-toml&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-basic z-toml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-toml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;productivity&lt;span class=&quot;z-punctuation z-definition z-string z-end z-toml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-array z-end z-toml&quot;&gt;]&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-toml&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-toml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-table z-begin z-toml&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-tag z-table z-toml&quot;&gt;&lt;span class=&quot;z-entity z-name z-table z-toml&quot;&gt;extra&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-table z-end z-toml&quot;&gt;]&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-toml&quot;&gt;&lt;span class=&quot;z-meta z-tag z-key z-toml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-toml&quot;&gt;lang&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-definition z-key-value z-toml&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-basic z-toml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-toml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;en&lt;span class=&quot;z-punctuation z-definition z-string z-end z-toml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-toml&quot;&gt;&lt;span class=&quot;z-invalid z-illegal z-toml&quot;&gt;+++&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-toml&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-toml&quot;&gt;&lt;span class=&quot;z-meta z-tag z-key z-toml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-toml&quot;&gt;The&lt;&#x2F;span&gt;&lt;span class=&quot;z-invalid z-illegal z-key z-toml&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-tag z-toml&quot;&gt;blog&lt;&#x2F;span&gt;&lt;span class=&quot;z-invalid z-illegal z-key z-toml&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-tag z-toml&quot;&gt;post&lt;&#x2F;span&gt;&lt;span class=&quot;z-invalid z-illegal z-key z-toml&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-tag z-toml&quot;&gt;text&lt;&#x2F;span&gt;&lt;span class=&quot;z-invalid z-illegal z-key z-toml&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-invalid z-illegal z-key z-toml&quot;&gt;.&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-invalid z-illegal z-keyval z-toml&quot;&gt;.&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Like the name suggests, a front formatter is put in front of the text in the markdown file itself. In this case, we define things like the title, the categories etc. In the case of Zola, the values that are defined in the front formatter are used in the template like this:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;html&quot; class=&quot;language-html z-code&quot;&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;z-text z-html z-basic&quot;&gt;&lt;span class=&quot;z-meta z-tag z-block z-any z-html&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-tag z-begin z-html&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-tag z-block z-any z-html&quot;&gt;h1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-tag z-end z-html&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;{{ page.title }}&lt;span class=&quot;z-meta z-tag z-block z-any z-html&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-tag z-begin z-html&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span class=&quot;z-entity z-name z-tag z-block z-any z-html&quot;&gt;h1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-tag z-end z-html&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;This allows the template to use some dynamic values while still being generic.&lt;&#x2F;p&gt;
&lt;p&gt;Zola is not the only one using this technique though: you can put just about anything in front formatters. Take this example from &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;marp.app&#x2F;#get-started&quot;&gt;Marp&lt;&#x2F;a&gt;, an app that allows you to make presentations with Markdown:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;markdown&quot; class=&quot;language-markdown z-code&quot;&gt;&lt;code class=&quot;language-markdown&quot; data-lang=&quot;markdown&quot;&gt;&lt;span class=&quot;z-text z-html z-markdown&quot;&gt;&lt;span class=&quot;z-meta z-block-level z-markdown&quot;&gt;&lt;span class=&quot;z-meta z-separator z-thematic-break z-markdown&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-thematic-break z-markdown&quot;&gt;---&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-markdown&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-markdown&quot;&gt;&lt;span class=&quot;z-meta z-paragraph z-markdown&quot;&gt;marp: true
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-markdown&quot;&gt;&lt;span class=&quot;z-meta z-paragraph z-markdown&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-markdown&quot;&gt;&lt;span class=&quot;z-meta z-paragraph z-markdown&quot;&gt;theme: uncover
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-markdown&quot;&gt;&lt;span class=&quot;z-meta z-paragraph z-markdown&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-markdown&quot;&gt;&lt;span class=&quot;z-meta z-paragraph z-markdown&quot;&gt;class:
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-markdown&quot;&gt;&lt;span class=&quot;z-meta z-paragraph z-markdown&quot;&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-markup z-list z-unnumbered z-markdown&quot;&gt;  &lt;&#x2F;span&gt;&lt;span class=&quot;z-markup z-list z-unnumbered z-bullet z-markdown&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-list_item z-markdown&quot;&gt;-&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-markup z-list z-unnumbered z-markdown&quot;&gt; &lt;span class=&quot;z-meta z-paragraph z-list z-markdown&quot;&gt;lead
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-markdown&quot;&gt;&lt;span class=&quot;z-markup z-list z-unnumbered z-markdown&quot;&gt;&lt;span class=&quot;z-meta z-paragraph z-list z-markdown&quot;&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-markup z-list z-unnumbered z-markdown&quot;&gt;  &lt;&#x2F;span&gt;&lt;span class=&quot;z-markup z-list z-unnumbered z-bullet z-markdown&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-list_item z-markdown&quot;&gt;-&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-markup z-list z-unnumbered z-markdown&quot;&gt;&lt;span class=&quot;z-meta z-paragraph z-list z-markdown&quot;&gt; invert
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-markdown&quot;&gt;&lt;span class=&quot;z-markup z-list z-unnumbered z-markdown&quot;&gt;&lt;span class=&quot;z-meta z-paragraph z-list z-markdown&quot;&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-markup z-list z-unnumbered z-markdown&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-markdown&quot;&gt;&lt;span class=&quot;z-markup z-list z-unnumbered z-markdown&quot;&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-paragraph z-markdown&quot;&gt;paginate: true
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-markdown&quot;&gt;&lt;span class=&quot;z-meta z-paragraph z-markdown&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-markdown&quot;&gt;&lt;span class=&quot;z-meta z-block-level z-markdown&quot;&gt;&lt;span class=&quot;z-meta z-separator z-thematic-break z-markdown&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-thematic-break z-markdown&quot;&gt;---&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-markdown&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-markdown&quot;&gt;&lt;span class=&quot;z-meta z-paragraph z-markdown&quot;&gt;Slide 1
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-markdown&quot;&gt;&lt;span class=&quot;z-meta z-paragraph z-markdown&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-markdown&quot;&gt;&lt;span class=&quot;z-meta z-block-level z-markdown&quot;&gt;&lt;span class=&quot;z-meta z-separator z-thematic-break z-markdown&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-thematic-break z-markdown&quot;&gt;---&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-markdown&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-markdown&quot;&gt;&lt;span class=&quot;z-meta z-paragraph z-markdown&quot;&gt;Slide 2
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;figure&gt;
    &lt;img class=&quot;m-auto&quot; src=&quot;https:&amp;#x2F;&amp;#x2F;teadrinkingprogrammer.github.io&#x2F;assets&amp;#x2F;marp.png&quot;  alt=&quot;Dark theme presentation. The middle says &amp;#x27;Slide 1&amp;#x27; and there are presentation controls at the bottom&quot;&gt;
    
    &lt;figcaption class=&quot;flex justify-center italic&quot;&gt;The resulting Marp slide.&lt;&#x2F;figcaption&gt;
    
&lt;&#x2F;figure&gt;
&lt;p&gt;An important other thing to note is that, because front formatters and templates work independently of the content, you can do a one-time set-up and never worry about your layout again. This exactly how I write these blog posts: I just write them, push them to Git, and voilà: they all look the same.&lt;&#x2F;p&gt;
&lt;p&gt;As you can see, the universality of a template and a front formatter means that many things that you would usually use productivity software for, can be done in Markdown: we have already replaced PowerPoint and WordPress. But how about Word?&lt;&#x2F;p&gt;
&lt;h1 id=&quot;level-3-pandoc-more-than-a-word-replacement&quot;&gt;&lt;span class=&quot;not-prose&quot;&gt;
    &lt;a class=&quot;tl-link text-2xl&quot; 
    href=&quot;#level-3-pandoc-more-than-a-word-replacement&quot; 
    aria-label=&quot;Anchor link for: level-3-pandoc-more-than-a-word-replacement&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;span&gt;
Level 3: Pandoc: more than a Word replacement&lt;&#x2F;h1&gt;
&lt;p&gt;Pandoc is a library that converts one kind of document into another. This doesn’t sound very remarkable, but it does much more than just convert files. Pandoc takes everything I have just showed and takes it to the next level: it allows you to define the layout of an entire essay in a front formatter and then just start typing. Take this front formatter I used for an essay I wrote:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;yaml&quot; class=&quot;language-yaml z-code&quot;&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-other z-document z-begin z-yaml&quot;&gt;---&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;header-includes&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-control z-flow z-block-scalar z-literal z-yaml&quot;&gt;|&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-string z-unquoted z-block z-yaml&quot;&gt;  \usepackage{titlesec}
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-string z-unquoted z-block z-yaml&quot;&gt;  \newcommand{\sectionbreak}{\clearpage}
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-string z-unquoted z-block z-yaml&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-string z-unquoted z-block z-yaml&quot;&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;title&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-yaml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-yaml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;Hello Markdown&lt;span class=&quot;z-punctuation z-definition z-string z-end z-yaml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;author&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-yaml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-yaml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;John Doe&lt;span class=&quot;z-punctuation z-definition z-string z-end z-yaml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;lang&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;nl&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;papersize&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;a4paper&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;geometry&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;margin=2cm&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;fontfamily&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;roboto&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;fontfamilyoptions&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;default&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;documentclass&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;extarticle&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;fontsize&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;12pt&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;linestretch&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-float z-decimal z-yaml&quot;&gt;1&lt;span class=&quot;z-punctuation z-separator z-decimal z-yaml&quot;&gt;.&lt;&#x2F;span&gt;2&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-yaml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-line z-number-sign z-yaml&quot;&gt;#&lt;&#x2F;span&gt;Table of Contents
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;toc&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-language z-boolean z-yaml&quot;&gt;true&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;toc-depth&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;3&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-yaml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-line z-number-sign z-yaml&quot;&gt;#&lt;&#x2F;span&gt;Support for \ newline
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;from&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-single z-yaml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-yaml&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;markdown+escaped\_line\_breaks&lt;span class=&quot;z-punctuation z-definition z-string z-end z-yaml&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;bibliography&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-single z-yaml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-yaml&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;citations.json&lt;span class=&quot;z-punctuation z-definition z-string z-end z-yaml&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-other z-document z-begin z-yaml&quot;&gt;---&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;figure&gt;
    &lt;img class=&quot;m-auto&quot; src=&quot;https:&amp;#x2F;&amp;#x2F;teadrinkingprogrammer.github.io&#x2F;assets&amp;#x2F;pandoc-markdown.png&quot;  alt=&quot;White paper with a university aesthetic. There is a centred title saying &amp;#x27;Hello Markdown&amp;#x27; with smaller text saying &amp;#x27;John Doe&amp;#x27;. The bottom has the number 1 indicating the page number.&quot;&gt;
    
    &lt;figcaption class=&quot;flex justify-center italic&quot;&gt;The resulting PDF.&lt;&#x2F;figcaption&gt;
    
&lt;&#x2F;figure&gt;
&lt;p&gt;This YAML front formatter contains everything I need to tell Pandoc to make sure every essay I write looks exactly the same. Some things will look familiar: options like title, lang and fontfamily are quite self-explanatory. Some of these options might look a bit out of place, though, like the “header-includes” option. This is because this option uses&lt;&#x2F;p&gt;
&lt;h1 id=&quot;level-4-latex-the-mother-of-all-markup&quot;&gt;&lt;span class=&quot;not-prose&quot;&gt;
    &lt;a class=&quot;tl-link text-2xl&quot; 
    href=&quot;#level-4-latex-the-mother-of-all-markup&quot; 
    aria-label=&quot;Anchor link for: level-4-latex-the-mother-of-all-markup&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;span&gt;
Level 4: Latex: the mother of all markup&lt;&#x2F;h1&gt;
&lt;p&gt;LaTeX is the mother of all typesetting languages. It is used widely in academia but largely unknown outside of it. That’s a shame, because it is very powerful. One reason why it might be less popular, is because its syntax is not very easy to read. Compare these two snippets of LaTeX and Pandoc Markdown:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;latex&quot; class=&quot;language-latex z-code&quot;&gt;&lt;code class=&quot;language-latex&quot; data-lang=&quot;latex&quot;&gt;&lt;span class=&quot;z-text z-tex z-latex&quot;&gt;    &lt;span class=&quot;z-meta z-preamble z-documentclass z-latex&quot;&gt;&lt;span class=&quot;z-keyword z-control z-preamble z-latex&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-backslash z-latex&quot;&gt;\&lt;&#x2F;span&gt;documentclass&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-preamble z-documentclass z-latex&quot;&gt;&lt;span class=&quot;z-meta z-group z-brace z-latex&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-group z-brace z-begin z-latex&quot;&gt;{&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-preamble z-documentclass z-latex&quot;&gt;&lt;span class=&quot;z-meta z-group z-brace z-latex&quot;&gt;&lt;span class=&quot;z-support z-class z-latex&quot;&gt;a&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-class z-latex&quot;&gt;r&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-class z-latex&quot;&gt;t&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-class z-latex&quot;&gt;i&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-class z-latex&quot;&gt;c&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-class z-latex&quot;&gt;l&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-class z-latex&quot;&gt;e&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-group z-brace z-end z-latex&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-comment z-line z-percentage z-tex&quot;&gt;% Starts an article
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-tex z-latex&quot;&gt;    &lt;span class=&quot;z-meta z-preamble z-usepackage z-latex&quot;&gt;&lt;span class=&quot;z-keyword z-control z-preamble z-latex&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-backslash z-latex&quot;&gt;\&lt;&#x2F;span&gt;usepackage&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-preamble z-usepackage z-latex&quot;&gt;&lt;span class=&quot;z-meta z-group z-brace z-latex&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-group z-brace z-begin z-latex&quot;&gt;{&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-preamble z-usepackage z-latex&quot;&gt;&lt;span class=&quot;z-meta z-group z-brace z-latex&quot;&gt;&lt;span class=&quot;z-support z-class z-latex&quot;&gt;amsmath&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-group z-brace z-end z-latex&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-comment z-line z-percentage z-tex&quot;&gt;% Imports amsmath
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-tex z-latex&quot;&gt;    &lt;span class=&quot;z-support z-function z-general z-latex&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-backslash z-latex&quot;&gt;\&lt;&#x2F;span&gt;title&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-brace z-latex&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-group z-brace z-begin z-latex&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-function z-general z-latex&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-backslash z-latex&quot;&gt;\&lt;&#x2F;span&gt;LaTeX&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-group z-brace z-end z-latex&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-comment z-line z-percentage z-tex&quot;&gt;% Title
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-tex z-latex&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-tex z-latex&quot;&gt;    &lt;span class=&quot;z-support z-function z-begin z-latex&quot;&gt;&lt;span class=&quot;z-keyword z-control z-flow z-begin z-latex&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-backslash z-latex&quot;&gt;\&lt;&#x2F;span&gt;begin&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-group z-brace z-begin z-latex&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-parameter z-function z-latex&quot;&gt;document&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-group z-brace z-end z-latex&quot;&gt;}&lt;&#x2F;span&gt; &lt;span class=&quot;z-comment z-line z-percentage z-tex&quot;&gt;% Begins a document
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-tex z-latex&quot;&gt;      &lt;span class=&quot;z-meta z-section z-latex&quot;&gt;&lt;span class=&quot;z-support z-function z-section z-latex&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-backslash z-latex&quot;&gt;\&lt;&#x2F;span&gt;section&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-group z-brace z-begin z-latex&quot;&gt;{&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-section z-latex&quot;&gt;&lt;span class=&quot;z-entity z-name z-section z-latex&quot;&gt;title&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-group z-brace z-end z-latex&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-tex z-latex&quot;&gt;      hello there
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-tex z-latex&quot;&gt;      &lt;span class=&quot;z-support z-function z-general z-latex&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-backslash z-latex&quot;&gt;\&lt;&#x2F;span&gt;newpage&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-tex z-latex&quot;&gt;    &lt;span class=&quot;z-support z-function z-end z-latex&quot;&gt;&lt;span class=&quot;z-keyword z-control z-flow z-end z-latex&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-backslash z-latex&quot;&gt;\&lt;&#x2F;span&gt;end&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-group z-brace z-begin z-latex&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-parameter z-function z-latex&quot;&gt;document&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-group z-brace z-end z-latex&quot;&gt;}&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;pre data-lang=&quot;markdown&quot; class=&quot;language-markdown z-code&quot;&gt;&lt;code class=&quot;language-markdown&quot; data-lang=&quot;markdown&quot;&gt;&lt;span class=&quot;z-text z-html z-markdown&quot;&gt;&lt;span class=&quot;z-meta z-block-level z-markdown&quot;&gt;&lt;span class=&quot;z-meta z-separator z-thematic-break z-markdown&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-thematic-break z-markdown&quot;&gt;---&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-markdown&quot;&gt;&lt;span class=&quot;z-meta z-paragraph z-markdown&quot;&gt;documentclass: article
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-markdown&quot;&gt;&lt;span class=&quot;z-meta z-paragraph z-markdown&quot;&gt;header-includes: |
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-markdown&quot;&gt;&lt;span class=&quot;z-meta z-paragraph z-markdown&quot;&gt;  usepackage{amsmath}
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-markdown&quot;&gt;&lt;span class=&quot;z-meta z-paragraph z-markdown&quot;&gt;&lt;span class=&quot;z-markup z-heading z-2 z-setext z-markdown&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-heading z-setext z-markdown&quot;&gt;---&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-markdown&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-markdown&quot;&gt;&lt;span class=&quot;z-meta z-block-level z-markdown&quot;&gt;&lt;span class=&quot;z-markup z-heading z-1 z-markdown&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-heading z-begin z-markdown&quot;&gt;#&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-markup z-heading z-1 z-markdown&quot;&gt;&lt;span class=&quot;z-entity z-name z-section z-markdown&quot;&gt;title&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-whitespace z-newline z-markdown&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-markdown&quot;&gt;&lt;span class=&quot;z-meta z-paragraph z-markdown&quot;&gt;hello there
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-markdown&quot;&gt;&lt;span class=&quot;z-meta z-paragraph z-markdown&quot;&gt;\newpage
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;As you can see, the separation between settings and content is very clear in the Pandoc Markdown, and the syntax is a lot more concise and easy to read. Pandoc Markdown also allows you to use snippets of LaTeX. This is very useful for the 5% of the time when you need to do something which you can’t do in Markdown, like start a new page. The result is still 95% readable Markdown, with some LaTeX commands here and there.&lt;&#x2F;p&gt;
&lt;p&gt;When using this setup, the pipeline is like this:&lt;&#x2F;p&gt;
&lt;p&gt;Pandoc Markdown → LaTeX → &lt;em&gt;anything&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;This is useful to remember when you are debugging your front formatter: if LaTeX has an error, first look in your Front formatter&#x2F;Pandoc.
This anything can be a PDF document, for example.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;markdown-everywhere&quot;&gt;&lt;span class=&quot;not-prose&quot;&gt;
    &lt;a class=&quot;tl-link text-2xl&quot; 
    href=&quot;#markdown-everywhere&quot; 
    aria-label=&quot;Anchor link for: markdown-everywhere&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;span&gt;
Markdown Everywhere&lt;&#x2F;h1&gt;
&lt;p&gt;As you can see, between GitHub, Pandoc and Marp, you can do a lot you can do in Office, all using the same paradigm. You can do many more things, like have compiled code snippets with Rmarkdown. Working with Markdown everywhere has a few advantages:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Define your layout once, use it for all subsequent documents&lt;&#x2F;li&gt;
&lt;li&gt;Familiar syntax for very different applications&lt;&#x2F;li&gt;
&lt;li&gt;Plain text: manipulate your files with any program that can work with plain text. Noboilerplate has a great &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;WgV6M1LyfNY?si=GsaXCvjGgq-v6KWD&quot;&gt;video&lt;&#x2F;a&gt; on this. An effect of having everything as plain-text is that you can use Git for your text with all the advantages that brings: easy collaborations, piggybacking of GitHub, and a complete history of everything.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Want to get started using Markdown? You can take my current set-ups as a springboard.&lt;&#x2F;p&gt;
&lt;p&gt;For presentations, you can use Marp with the front formatter that was shown previously. I would recommend using the CLI-tool with these flags: &lt;code&gt;marp . --html --server --watch&lt;&#x2F;code&gt; (I have aliased it). It enables real-time updates to your presentation, this set-up made the workflow for making presentations buttery smooth.&lt;&#x2F;p&gt;
&lt;p&gt;Essays are a bit more tricky. Like I discussed in the previous chapter, the combination of LaTeX and Pandoc is a bit finicky. As a starting point, you can use my template that I showed in chapter 4. Combine this with &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;miktex.org&#x2F;about&quot;&gt;MiKTeX
&lt;&#x2F;a&gt; and the experience is relatively painless. While setting up MiKTeX, I did have some strange errors, but they went away when I updated MiKTeX in both administrator mode and user mode. After the updates, I recommend you to enable a &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;miktex.org&#x2F;kb&#x2F;just-enough-tex&quot;&gt;“Just enough TeX”&lt;&#x2F;a&gt; set-up. Once you have MiKTeX set-up, you can just hit “export” with XeLaTeX PDF, and it will compile. This will take a while because it installs the necessary packages on the fly, so have patience and keep an eye on the processes in task manager. The result should be a PDF file that is ready to share.&lt;&#x2F;p&gt;
&lt;p&gt;The way I made my blog with &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.getzola.org&#x2F;documentation&#x2F;getting-started&#x2F;overview&#x2F;&quot;&gt;Zola&lt;&#x2F;a&gt; is a topic all on its own, and I have written &lt;a href=&quot;https:&#x2F;&#x2F;teadrinkingprogrammer.github.io&#x2F;blog&#x2F;how-to-make-your-blog-blazingly-fast&#x2F;&quot;&gt;a blog post&lt;&#x2F;a&gt; about it. For this post, the most relevant part is that I used GitHub actions and GitHub pages to deploy my site, but I could have used pretty much anything under the sun because of the simplicity of hosting a static-website-generator like Zola with Markdown.&lt;&#x2F;p&gt;
&lt;p&gt;Before I sign of, I want to mention &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;typst.app&#x2F;&quot;&gt;Typst&lt;&#x2F;a&gt;: I am very excited about the direction it is going, but it isn’t ready yet.&lt;&#x2F;p&gt;
&lt;p&gt;All in all, I think the time investment of working these systems out is well worth the advantages, but you might disagree: I’d love to hear what you think.&lt;&#x2F;p&gt;
&lt;p&gt;P.S: I was so focused on writing this I can’t remember what I listened too, but one of the albums was &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;playlist?list=PLGr1IYuG8Wwv0LOsD1PUbjQu3dchzoOAW&amp;amp;si=9ZaiCZeAA25hi76l&quot;&gt;Pretzel Logic&lt;&#x2F;a&gt; by the great Steely Dan.&lt;&#x2F;p&gt;
&lt;p&gt;Also, thank you to all the folks at &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;tildes.net&#x2F;~tech&#x2F;1dqs&#x2F;the_markup_iceberg&quot;&gt;Tildes&lt;&#x2F;a&gt; for giving me very useful feedback about this post. Their constructive criticism is exactly why I prefer Tildes to Reddit.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024 Will Be The Year Of the Linux Desktop !(?)</title>
        <published>2024-01-06T00:00:00+00:00</published>
        <updated>2024-01-06T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              TeaDrinkingProgrammer
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://teadrinkingprogrammer.github.io/blog/year-of-the-linux-desktop/"/>
        <id>https://teadrinkingprogrammer.github.io/blog/year-of-the-linux-desktop/</id>
        
        <content type="html" xml:base="https://teadrinkingprogrammer.github.io/blog/year-of-the-linux-desktop/">&lt;h1 id=&quot;the-year-of-the-linux-desktop&quot;&gt;&lt;span class=&quot;not-prose&quot;&gt;
    &lt;a class=&quot;tl-link text-2xl&quot; 
    href=&quot;#the-year-of-the-linux-desktop&quot; 
    aria-label=&quot;Anchor link for: the-year-of-the-linux-desktop&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;span&gt;
The Year of the Linux Desktop&lt;&#x2F;h1&gt;
&lt;p&gt;Before I start: if you’re reading this around the time this is published: happy new year! I hope you have had a fantastic winter holiday (I sure did).&lt;&#x2F;p&gt;
&lt;p&gt;2024 is going to be an exciting year, especially in Linuxland. I even think this year holds so much promise that it might be the long-awaited “Year of the Linux Desktop”: the mythical year when the Linux Desktop becomes mainstream which is always one year away, kind of like fusion power. It has been one year away for so long, that the concept has become a meme in and of itself. Hence, this title is kind of tongue-in-cheek: I don’t actually think that next year will magically be the year where everyone suddenly starts using Linux. I do think that Linux will become accessible for far more people though. Before I get into why, I first need to give some context.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;linux-as-a-desktop-operating-system&quot;&gt;&lt;span class=&quot;not-prose&quot;&gt;
    &lt;a class=&quot;tl-link text-2xl&quot; 
    href=&quot;#linux-as-a-desktop-operating-system&quot; 
    aria-label=&quot;Anchor link for: linux-as-a-desktop-operating-system&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;span&gt;
Linux as a desktop operating system&lt;&#x2F;h1&gt;
&lt;p&gt;Linux is pretty old by software standards: it’s first release was all the way back in 1991. Although it started as a one-man project, it quickly garnered popularity as a server OS. This is not so strange, as the appeal of a license-free OS is very appealing when you have hundreds of computers running that OS. You can save a lot of money by using Linux on servers. This popularity on the server has only grown: Linux is now the de-facto standard on webservers. It is so ingrained in fact, that even Microsoft has a Linux distribution now for it’s Azure cloud service.&lt;&#x2F;p&gt;
&lt;p&gt;Linux being the standard on servers has slowly but surely made Linux more appealing for developers, because using the same OS for both your server and work machine avoids bugs and complexity when the time comes to deploy an app. This is why Microsoft have now included the confusingly named “Windows-subsystem-for-Linux” or WSL. It should have been named LSW because Linux is the subsystem but I digress. WSL has made it possible for Windows users to use Linux on Windows and has become quite popular or even, depending on the field, pretty much mandatory (think of Docker).&lt;&#x2F;p&gt;
&lt;p&gt;For gamers, Linux has also become a more and more attractive option. Since Valve has released their Steamdeck, they have been heavily investing in a software called “Proton”. It is a collection of programs that translate Windows system and graphics calls into Linux system and Vulkan calls. You can compare it to a translation software: Spanish in, English out. The main benefit of this approach is that it is very lightweight. It is so lightweight in fact, that &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.tomshardware.com&#x2F;software&#x2F;linux&#x2F;three-gaming-focused-linux-operating-systems-beat-windows-11-in-gaming-benchmarks&quot;&gt;a Linux distro tuned for gaming (Norbora) can beat Windows at playing Windows games&lt;&#x2F;a&gt;. You heard that right: in a benchmark by Computerbase.de of four games, Windows has &lt;em&gt;less FPS&lt;&#x2F;em&gt; than a Linux distro when playing &lt;em&gt;Windows games&lt;&#x2F;em&gt;. Is this the case for every game? No. Even within this benchmark, sometimes Windows 11 is faster. But the fact that it is even close and on average faster, shows that Linux is better or equal to Windows at running Windows games. Keep in mind we haven’t even talked about native Linux games versus native Windows games.&lt;&#x2F;p&gt;
&lt;figure&gt;
    &lt;img class=&quot;m-auto&quot; src=&quot;https:&amp;#x2F;&amp;#x2F;teadrinkingprogrammer.github.io&#x2F;assets&amp;#x2F;norbora-vs-windows.png&quot;  alt=&quot;Norbora is at 100% while Windows 11 is at 94% relative performance.&quot;&gt;
    
    &lt;figcaption class=&quot;flex justify-center italic&quot;&gt;Relative FPS performance to Norbora Linux&lt;&#x2F;figcaption&gt;
    
&lt;&#x2F;figure&gt;
&lt;p&gt;The amount of Windows games that can run using Proton is very high: looking at &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.protondb.com&#x2F;&quot;&gt;protondb.com&lt;&#x2F;a&gt;, 80% of Windows games on Steam are either verified by Valve to be playable on Linux or deemed playable in some capacity by popular vote. Only 20% is downright unplayable. This isn’t even a fault of Proton most of the time: most games are “borked” because of game developers purposefully blocking games from running Proton with anti-cheat. In other words: pretty much everything that isn’t multiplayer with match-making is all but guaranteed to work.&lt;&#x2F;p&gt;
&lt;p&gt;For the average user, things have been improving as well. With many things moving to browser apps, many productivity tools can now be used on Linux. Think of apps like Teams, Word or even Photoshop which can now be used online. Speaking of Word, I am going to make a post about using Markdown as a replacement for it, so stay tuned for that.&lt;&#x2F;p&gt;
&lt;p&gt;This all sounds great, but there are still very few people using Linux. Why is that?&lt;&#x2F;p&gt;
&lt;h1 id=&quot;the-dealbreakers&quot;&gt;&lt;span class=&quot;not-prose&quot;&gt;
    &lt;a class=&quot;tl-link text-2xl&quot; 
    href=&quot;#the-dealbreakers&quot; 
    aria-label=&quot;Anchor link for: the-dealbreakers&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;span&gt;
The dealbreakers&lt;&#x2F;h1&gt;
&lt;p&gt;Despite all the progress that the Linux desktop has made, there are still some dealbreakers. One complaint I have often heard is screen issues of all kinds: screens tearing when they’re not supposed to, second monitors not working or scaling not working properly for 4K screens. A second problem which has been a dealbreaker for many is Nvidia. Nvidia graphics cards and Linux have been a terrible combination for a long time. As Linus Torvalts himself put it &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;OF_5EKNX0Eg?si=CzVRNMiuO7KR0fhG&quot;&gt;“Nvidia has been the single worst company we’ve ever dealt with. So Nvidia: fuck you”&lt;&#x2F;a&gt;. This …  constructive criticism was made some years ago, and thankfully, Nvidia has come around to Linux &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.phoronix.com&#x2F;review&#x2F;nvidia-open-kernel&quot;&gt;open sourcing some parts of their drivers&lt;&#x2F;a&gt;. That said, some parts remain closed source and the drivers are still not great, causing many issues. The difference between Nvidia and AMD is so big that I am willing to say that Nvidia is 5 to 10 years behind on AMD with their drivers.&lt;&#x2F;p&gt;
&lt;p&gt;This status quo is not going to last though: the great people at Collabora are making a brand new fully open source driver called &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;news.itsfoss.com&#x2F;nvidia-nvk&#x2F;&quot;&gt;NVK&lt;&#x2F;a&gt;. The drivers are written from scratch and focus on new GPUs. The progress on the NVK drivers is at a break-neck speed: &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.phoronix.com&#x2F;news&#x2F;Nouveau-NVK-One-Win&quot;&gt;after just one year, the driver can already run at least one game faster than the old driver&lt;&#x2F;a&gt;. Let me be very clear: the driver is far from ready. The trajectory is clear though: when the driver is finished, I expect it to outperform the current open source driver all while having less bugs. The reason for me expecting it to be more stable is simply because it has been built from scratch and has people building it actively that are in touch with the Linux Desktop community. I don’t know when NVK will come out, but I wouldn’t be surprised if it would be next year.&lt;&#x2F;p&gt;
&lt;p&gt;These developments come at a time where Gnome and KDE (the two main desktop environments of Linux) are also doing a lot of work to make their experience more user-friendly and more bug-free.&lt;&#x2F;p&gt;
&lt;p&gt;If or when all these things come together, the main reasons to not use Linux for gamers and developers will be lifted. Whether this means that people will actually switch is another question altogether. I think that the number of developers switching could increase quite quickly once word spreads that Linux is “actually good now”. In fact, I think this is already happening on a smaller scale.&lt;&#x2F;p&gt;
&lt;p&gt;Gamers are also slowly switching to Linux. already There is one opportunity that may increase this greatly together with the previous considerations: the end-of-life of Windows 10. When Windows 10 is not supported anymore, many people will be forced to either upgrade their set-up for Windows 11 or switch. Some may upgrade, some may just stay on Windows 10 but some may look into Linux. If they find that it suits their use-case better, which I think it does for many people, many more gamers may start switching to Linux.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;reading-tea-leaves&quot;&gt;&lt;span class=&quot;not-prose&quot;&gt;
    &lt;a class=&quot;tl-link text-2xl&quot; 
    href=&quot;#reading-tea-leaves&quot; 
    aria-label=&quot;Anchor link for: reading-tea-leaves&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;span&gt;
Reading tea-leaves&lt;&#x2F;h1&gt;
&lt;p&gt;In the end, many predictions in this analysis are just that and all of this can very well turn out to be all wrong. That being said, I do think that Linux is at a turning point where it starts to be a serious option for people outside the “open source” inner crowd. I don’t think it is going to become mainstream, but I think it is on a trajectory to become a large minority in the desktop space: some 10 or 20% of the developers and gamers for instance. This future isn’t certain, but one can hope.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>I built my own theme!</title>
        <published>2023-10-04T00:00:00+00:00</published>
        <updated>2023-10-04T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              TeaDrinkingProgrammer
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://teadrinkingprogrammer.github.io/blog/i-built-my-own-theme/"/>
        <id>https://teadrinkingprogrammer.github.io/blog/i-built-my-own-theme/</id>
        
        <content type="html" xml:base="https://teadrinkingprogrammer.github.io/blog/i-built-my-own-theme/">&lt;h1 id=&quot;so-i-built-my-own-theme&quot;&gt;&lt;span class=&quot;not-prose&quot;&gt;
    &lt;a class=&quot;tl-link text-2xl&quot; 
    href=&quot;#so-i-built-my-own-theme&quot; 
    aria-label=&quot;Anchor link for: so-i-built-my-own-theme&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;span&gt;
So … I built my own theme&lt;&#x2F;h1&gt;
&lt;p&gt;It’s called &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;TeaDrinkingProgrammer&#x2F;tranquil&quot;&gt;tranquil&lt;&#x2F;a&gt; 😄.&lt;&#x2F;p&gt;
&lt;p&gt;You might think: didn’t you just release this blog? Yes, that’s right. At launch I already used a great theme called &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;isunjn&#x2F;serene&quot;&gt;Serene&lt;&#x2F;a&gt;. I liked the theme a lot but wanted to change it a bit which I had some troubles with. The Serene theme is made with a very common pattern where each component has their own separate CSS class. This means there is a lot of overlap in the content of the CSS classes. The classes also used a bit too much pixel padding values for my liking. I had also wanted to try out Tailwind for a while, so I figured that re-implementing Serene in Tailwind would be the perfect opportunity!&lt;&#x2F;p&gt;
&lt;p&gt;The result is called &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;TeaDrinkingProgrammer&#x2F;tranquil&quot;&gt;Tranquil&lt;&#x2F;a&gt;. The main feel is still the same as Serene, but there are some differences. The main difference is the styling: all styles have been rewritten&#x2F;reimagined in Tailwind. Besides this, the Table Of Contents has also changed quite a bit: Serene uses a sidebar, but the CSS to accomplish this uses a lot of CSS black magic to work. I went for a simpler implementation by putting the TOC at the top of the article.
One of the best things about Serene is that it had features that to me had a right balance between added complexity and minimalism: a projects page, image zooming, some callouts and extra syntax using &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;katex.org&#x2F;&quot;&gt;KaTeX&lt;&#x2F;a&gt; and &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mermaid-js&#x2F;mermaid&quot;&gt;Mermaid&lt;&#x2F;a&gt;. The thing I was most surprised about was the comment system which uses &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;giscus.app&#x2F;&quot;&gt;Giscus&lt;&#x2F;a&gt;. Giscus enables comments despite the website being static and not having a backend. It accomplishes this by “abusing” the Github discussion feature. This feature is meant to enable discussion on repositories, but Giscus uses it as a backend for its comment system. It works like a charm and means I don’t need to handle account logins and storage, which is always a plus.&lt;&#x2F;p&gt;
&lt;p&gt;The theme wouldn’t have been possible without &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;isunjn&#x2F;serene&quot;&gt;Isunjns Serene theme&lt;&#x2F;a&gt;, which stands on its own. I also got a lot of inspiration from &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;fasterthanli.me&quot;&gt;FasterThanLimes blog&lt;&#x2F;a&gt; which is very well designed and has great articles, so go check that out as well.&lt;&#x2F;p&gt;
&lt;p&gt;And if anyone remembers: yes, I haven’t forgotten my Linux article. It has been posted simultaneously with this article :).&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>How to start your Linux journey</title>
        <published>2023-10-04T00:00:00+00:00</published>
        <updated>2023-10-04T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              TeaDrinkingProgrammer
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://teadrinkingprogrammer.github.io/blog/linux-distributions/"/>
        <id>https://teadrinkingprogrammer.github.io/blog/linux-distributions/</id>
        
        <content type="html" xml:base="https://teadrinkingprogrammer.github.io/blog/linux-distributions/">&lt;p&gt;This blogpost is an edited version of a post on &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;tildes.net&#x2F;~comp&#x2F;12cj&#x2F;best_linux_distro_for_gaming_noob&quot;&gt;Tildes&lt;&#x2F;a&gt; which is a “Reddit alternative”.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;seeing-the-forest-for-the-trees&quot;&gt;&lt;span class=&quot;not-prose&quot;&gt;
    &lt;a class=&quot;tl-link text-2xl&quot; 
    href=&quot;#seeing-the-forest-for-the-trees&quot; 
    aria-label=&quot;Anchor link for: seeing-the-forest-for-the-trees&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;span&gt;
Seeing the forest for the trees&lt;&#x2F;h1&gt;
&lt;p&gt;So, you want to start using Linux: great! You find out that there are tons of distributions to choose from but you don’t know which one to choose. If you start looking for tutorials, they mostly give you a reccomendation with people then saying that it is bad and you should use something else instead. To help new Linux users out, I thought I would try a different approach: instead of saying which one is good and which ones aren’t, explain a bit about Linux and distro’s so that users understand the landscape enough to make an educated decision.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;General disclaimer: this is all my own opinion. Look around, watch videos (The Linux Experiment and Techhut are great Youtube Channels for this) and do your own research.&lt;&#x2F;strong&gt; That being said, if you have anything to add or have any questions, I would love to hear them.&lt;&#x2F;p&gt;
&lt;p&gt;Also take a look at &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;distrochooser.de&#x2F;&quot;&gt;Distrochooser&lt;&#x2F;a&gt;. I don’t think all questions are relevant, but it is a good starting point.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;glossary&quot;&gt;&lt;span class=&quot;not-prose&quot;&gt;
    &lt;a class=&quot;tl-link text-2xl&quot; 
    href=&quot;#glossary&quot; 
    aria-label=&quot;Anchor link for: glossary&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;span&gt;
Glossary&lt;&#x2F;h1&gt;
&lt;p&gt;FOSS: Fully Open Source Software. Sometimes called Free Software or Open Source Software. Software that is free as in free beer and free as in freedom. Freedom in this context means that users can see how the program works and copy the source code, &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Free_software#Definition_and_the_Four_Essential_Freedoms_of_Free_Software&quot;&gt;among other things&lt;&#x2F;a&gt;. FOSS software is also developed by a community of volunteers most of the time. Related terms: OSS, Open Source software, Free Software, Libre software.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;so-what-even-is-linux-exactly&quot;&gt;&lt;span class=&quot;not-prose&quot;&gt;
    &lt;a class=&quot;tl-link text-2xl&quot; 
    href=&quot;#so-what-even-is-linux-exactly&quot; 
    aria-label=&quot;Anchor link for: so-what-even-is-linux-exactly&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;span&gt;
So …  what even is Linux exactly?&lt;&#x2F;h1&gt;
&lt;p&gt;If people talk about “Linux” they mean it as a shorthand for a “Linux distribution” or “distro”. This is an operating system that uses the Linux Kernel. The Linux Kernel is a program that enables a computer to do basic stuff: think reading and writing files, managing RAM, connecting to the internet or Bluetooth and making sure devices like your graphics card and USB-devices actually work. This is important, but with just a kernel there is no easy way for an end user to actually do anything useful on their PC. This is where an ecosystem of programs come in. The first layer above the kernel is system utilities. These provide a set of console commands like gnu libc or musl libc. The next layer is enduser utilities. These are less basic than system utilities and all enable the use of the operating system by an end user. Wayland or X11 enable you to see screens on your computer. Pipewire or Pulseaudio enable you to use audio devices (although the kernel already does some of this through Alsa). The last layer is the final user interface, most often in the form of a Desktop Environment. Window Managers are also an option but they are different enough from Windows and Mac that they are for more advanced users.&lt;&#x2F;p&gt;
&lt;p&gt;The dividing lines might seem arbitrary because they are: in the end all programs work together to make Linux distros work. All operating systems work this way, the only difference with Linux is that it is a collection of separate programs.
A DE is the part of a distro that visually sets it apart most: it includes a few more parts but the most important ones are a suite of basic graphical programs like a file manager, a settings program and a task manager. Most of the time, a desktop environment has a larger ecosystem of apps that fit in well with it.&lt;&#x2F;p&gt;
&lt;figure&gt;
    &lt;img class=&quot;m-auto&quot; src=&quot;https:&amp;#x2F;&amp;#x2F;teadrinkingprogrammer.github.io&#x2F;assets&amp;#x2F;linux-diagram.png&quot;  alt=&quot;alt text&quot;&gt;
    
    &lt;figcaption class=&quot;flex justify-center italic&quot;&gt;A rough diagram of the build up of a typical Linux distro&lt;&#x2F;figcaption&gt;
    
&lt;&#x2F;figure&gt;&lt;h1 id=&quot;choosing-a-distribution-and-desktop-environment&quot;&gt;&lt;span class=&quot;not-prose&quot;&gt;
    &lt;a class=&quot;tl-link text-2xl&quot; 
    href=&quot;#choosing-a-distribution-and-desktop-environment&quot; 
    aria-label=&quot;Anchor link for: choosing-a-distribution-and-desktop-environment&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;span&gt;
Choosing a Distribution and Desktop Environment&lt;&#x2F;h1&gt;
&lt;h2 id=&quot;tldr&quot;&gt;&lt;span class=&quot;not-prose&quot;&gt;
    &lt;a class=&quot;tl-link text-2xl&quot; 
    href=&quot;#tldr&quot; 
    aria-label=&quot;Anchor link for: tldr&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;span&gt;
TLDR&lt;&#x2F;h2&gt;
&lt;p&gt;A distribution and a Desktop Environment are two seperate choices. For Desktops, it comes down to if the goals of the DE align with yours, for distro’s it is a trade-off between stability and ‘cutting-edgeness’.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;choosing-a-desktop-environment-de&quot;&gt;&lt;span class=&quot;not-prose&quot;&gt;
    &lt;a class=&quot;tl-link text-2xl&quot; 
    href=&quot;#choosing-a-desktop-environment-de&quot; 
    aria-label=&quot;Anchor link for: choosing-a-desktop-environment-de&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;span&gt;
Choosing a Desktop Environment (DE)&lt;&#x2F;h2&gt;
&lt;p&gt;The main factor when choosing a Desktop Environments is their end goals and vision of what a DE is supposed to be.&lt;br &#x2F;&gt;
I think DEs can be divided in a few categories which follow a certain philosophy:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Curated&lt;br &#x2F;&gt;
“Users use their computer through their DE, so a DE should focus on an easy-to use and streamlined user experience with the apps looking coherent and pleasing.”&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Lightweight&lt;br &#x2F;&gt;
“Users use a computer for the apps and want them to perform well, thus a DE should use as little system resources as possible.”&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Tweakable&lt;br &#x2F;&gt;
“Users have different preferences, thus a DE should accommodate tweaking as much as possible so that they can tweak their DE to be just right for them.”&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Familiar&lt;br &#x2F;&gt;
“Users don’t really care about their DE, they just want to get on with their day. Because of this, a DE should be familiar, and shouldn’t change too much over time.”&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Gnome and KDE are the main DEs. They have the following philosophies:&lt;&#x2F;p&gt;
&lt;p&gt;Gnome is a curated distro: Its philosophy is to give a relatively narrow curated experience which is thoroughly tested. Think of it as the MacOS of Linux. An important difference is that it is only similar in user experience, but not in the walled garden way: Gnome is still very much FOSS and community guided.&lt;&#x2F;p&gt;
&lt;p&gt;KDE is a tweakable distro: its philosophy is quite the opposite to Gnome: They believe the end user should be able to tweak a lot about the distro. This does not mean that the default experience is bad (I for one use KDE and have barely tweaked it). It does mean that KDE development is spread out over more code and as a result the experience is less curated and polished (both in UX and bugs) than a more curated distro like Gnome.&lt;&#x2F;p&gt;
&lt;p&gt;Besides KDE and Gnome, there are also XFCE&#x2F;LXQT and Cinnamon. XFCE (and LXQT) focus on being lightweight and tweakable. The only difference (that I am aware of, I do not know them very well) is that they use different underlying technologies (XFCE uses Gnomes GTK and LXQT uses QT, which KDE also uses).&lt;&#x2F;p&gt;
&lt;p&gt;Cinnamon is mainly bound to Linux Mint (more on distros later) and focuses on stability and familiarity for Windows users.&lt;br &#x2F;&gt;
There are many, many more DEs, but these are the main ones and the ones I would consider first.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;tldr-1&quot;&gt;&lt;span class=&quot;not-prose&quot;&gt;
    &lt;a class=&quot;tl-link text-2xl&quot; 
    href=&quot;#tldr-1&quot; 
    aria-label=&quot;Anchor link for: tldr-1&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;span&gt;
TLDR&lt;&#x2F;h3&gt;
&lt;p&gt;DEs can be divided in a few categories roughly in order of popularity (DEs in &lt;em&gt;italic&lt;&#x2F;em&gt; are in multiple):&lt;&#x2F;p&gt;
&lt;h4 id=&quot;curated&quot;&gt;&lt;span class=&quot;not-prose&quot;&gt;
    &lt;a class=&quot;tl-link text-2xl&quot; 
    href=&quot;#curated&quot; 
    aria-label=&quot;Anchor link for: curated&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;span&gt;
Curated&lt;&#x2F;h4&gt;
&lt;p&gt;Gnome&lt;br &#x2F;&gt;
Cosmic (POP! OS)
&lt;em&gt;Elementary (Elementary OS)&lt;&#x2F;em&gt;&lt;br &#x2F;&gt;
Budgie&lt;&#x2F;p&gt;
&lt;h4 id=&quot;lightweight&quot;&gt;&lt;span class=&quot;not-prose&quot;&gt;
    &lt;a class=&quot;tl-link text-2xl&quot; 
    href=&quot;#lightweight&quot; 
    aria-label=&quot;Anchor link for: lightweight&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;span&gt;
Lightweight&lt;&#x2F;h4&gt;
&lt;p&gt;&lt;em&gt;XFCE&lt;&#x2F;em&gt;&lt;br &#x2F;&gt;
LXQT&lt;br &#x2F;&gt;
Mate&lt;&#x2F;p&gt;
&lt;h4 id=&quot;tweakable&quot;&gt;&lt;span class=&quot;not-prose&quot;&gt;
    &lt;a class=&quot;tl-link text-2xl&quot; 
    href=&quot;#tweakable&quot; 
    aria-label=&quot;Anchor link for: tweakable&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;span&gt;
Tweakable&lt;&#x2F;h4&gt;
&lt;p&gt;KDE&lt;br &#x2F;&gt;
&lt;em&gt;XFCE&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h4 id=&quot;familiar&quot;&gt;&lt;span class=&quot;not-prose&quot;&gt;
    &lt;a class=&quot;tl-link text-2xl&quot; 
    href=&quot;#familiar&quot; 
    aria-label=&quot;Anchor link for: familiar&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;span&gt;
Familiar&lt;&#x2F;h4&gt;
&lt;p&gt;Cinnamon - (Windows)&lt;br &#x2F;&gt;
Zorin-OS - (Windows)&lt;br &#x2F;&gt;
&lt;em&gt;Elementary (Elementary OS&lt;&#x2F;em&gt; -  (Mac-OS)&lt;&#x2F;p&gt;
&lt;h1 id=&quot;choosing-a-distribution-distro&quot;&gt;&lt;span class=&quot;not-prose&quot;&gt;
    &lt;a class=&quot;tl-link text-2xl&quot; 
    href=&quot;#choosing-a-distribution-distro&quot; 
    aria-label=&quot;Anchor link for: choosing-a-distribution-distro&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;span&gt;
Choosing a Distribution (Distro)&lt;&#x2F;h1&gt;
&lt;p&gt;In a distro, I see the choice mainly as a trade-off spectrum. On one side you have stability and on the other ‘cutting-edgeness’.&lt;&#x2F;p&gt;
&lt;p&gt;A perfectly stable distro is exactly that: stable. A good example is Debian. It uses packages and technologies that have been proven to be reliable. It also only uses very stable versions of these softwares. A side-effect of this is that it is behind on new features. This does not just mean quality-of-life features, but also features like new versions of drivers, which can result in crashes or slowdowns if you apps that require or benefit from up-to-date drivers. The same goes for other software, but this is usually less of an issue.&lt;&#x2F;p&gt;
&lt;p&gt;On the other side is a perfectly cutting edge distro. I think the best example of this is Arch. A cutting-edge distro uses the newest technology stacks (like Wayland) and the newest (main branch) versions of apps. This means that it has the newest features and gets speed ups and new drivers pretty much immediately. This also means that they are the first to experience issues and bugs.&lt;&#x2F;p&gt;
&lt;p&gt;If you have the spectrum I would probably order mainstream distros from stable to cutting edge as follows:&lt;&#x2F;p&gt;
&lt;p&gt;Debian — Ubuntu (or derived, like Kubuntu, Linux Mint etc.) — Fedora (derived, like Norbora) — Arch (or derived, like Endeavor OS, Garuda etc.)&lt;&#x2F;p&gt;
&lt;p&gt;The outlier here is Linux Mint and Ubuntu, because Ubuntu uses a cutting edge technology stack, but a more stable version and Linux Mint uses both older technology stacks and versions.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;general-advice&quot;&gt;&lt;span class=&quot;not-prose&quot;&gt;
    &lt;a class=&quot;tl-link text-2xl&quot; 
    href=&quot;#general-advice&quot; 
    aria-label=&quot;Anchor link for: general-advice&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;span&gt;
General advice&lt;&#x2F;h1&gt;
&lt;p&gt;Linux is not difficult to use per-se, but it is different. One of the most important differences is software installation. On Windows, you go online to download a file to install a program. On Linux, this is not the way to go.&lt;&#x2F;p&gt;
&lt;p&gt;An important difference is installing apps&lt;&#x2F;p&gt;
&lt;h2 id=&quot;app-installation&quot;&gt;&lt;span class=&quot;not-prose&quot;&gt;
    &lt;a class=&quot;tl-link text-2xl&quot; 
    href=&quot;#app-installation&quot; 
    aria-label=&quot;Anchor link for: app-installation&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;span&gt;
App installation&lt;&#x2F;h2&gt;
&lt;p&gt;Try downloading the app in the app-store first (yes, just like on your phone). 9&#x2F;10 times, the app will be there. Only if this is not the case, should you go look online. Keep in mind which ‘family’ your distro is a part of. For example: Linux Mint is derived from Ubuntu, which is derived from Debian. This means that you can use an installation file which is labeled as “Ubuntu” or “Debian”.&lt;&#x2F;p&gt;
&lt;p&gt;All this is possible because of package managers: a program that manages all your apps. This includes installing them and keeping them up-to-date. Because Linux is just a collection of programs, like I explained in the first paragraph, all apps use this system, which means that when your operating system is updated, so are your apps. A great advantage is that it means that there is less danger of malware, because you can just use the app store. It also means your apps will stay up-to-date.&lt;&#x2F;p&gt;
&lt;p&gt;One problem with package managers is that proprietary apps (non-foss) apps cannot use the system because it is part of the OS. It is also a lot of work for developers to package all the apps for all distribution families.&lt;&#x2F;p&gt;
&lt;p&gt;A new development which brings a solution is the Portals standard. The two main implementations are Flatpak and Snap. The idea behind Portals is that apps are isolated, so that an app can run on any distro. It also means that they can also access less of the system and have to work with permissions. These work like old Android permissions: developers specify the permissions they need and they always get granted. A sidenote: I greatly prefer Flatpak over Snap. The reason is that Snap uses closed source servers, where Flatpak is fully open source. Flatpak vs Snap is an ongoing debate in the debate in the Linux community but Flatpak seems to be the defacto standard on most distros.&lt;&#x2F;p&gt;
&lt;p&gt;With Portals and the package manager, you can install most apps out of the box, even closed source ones. Chrome, Jetbrains IDES, Steam, Discord, VS Code, OBS and Spotify all have Linux versions. Combine this with webapps with Netflix, Whatsapp and Teams and most people will find that they can use Linux without much problems.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;home-office-use&quot;&gt;&lt;span class=&quot;not-prose&quot;&gt;
    &lt;a class=&quot;tl-link text-2xl&quot; 
    href=&quot;#home-office-use&quot; 
    aria-label=&quot;Anchor link for: home-office-use&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;span&gt;
Home&#x2F;Office use&lt;&#x2F;h1&gt;
&lt;p&gt;So, what if I use my computer mainly to surf the web and edit documents? The DE choice is all personal preference. For the distro choice, anything can work. The thing is: for home use you do not &lt;em&gt;need&lt;&#x2F;em&gt; cutting edge software. This means that for beginners, it is better to stick to more stable distros.
Debian is a good choice but may be a bit far behind for most users. My general recommendation is thus Linux Mint because it is stable and most importantly very familiar to Windows users.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;alternatives-to-windows-apps-for-home-use&quot;&gt;&lt;span class=&quot;not-prose&quot;&gt;
    &lt;a class=&quot;tl-link text-2xl&quot; 
    href=&quot;#alternatives-to-windows-apps-for-home-use&quot; 
    aria-label=&quot;Anchor link for: alternatives-to-windows-apps-for-home-use&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;span&gt;
Alternatives to Windows apps for home use&lt;&#x2F;h2&gt;
&lt;p&gt;Most home users have some problems with finding Linux versions for some apps they need to use. Some apps don’t have a one-on-one replacement, but some come quite close.&lt;&#x2F;p&gt;
&lt;p&gt;If you need an alternative to any other app, take a look at the excellent &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;alternativeto.net&#x2F;&quot;&gt;Alternative To&lt;&#x2F;a&gt;. You can filter on Linux (and open source).&lt;&#x2F;p&gt;
&lt;h3 id=&quot;word-office-suites&quot;&gt;&lt;span class=&quot;not-prose&quot;&gt;
    &lt;a class=&quot;tl-link text-2xl&quot; 
    href=&quot;#word-office-suites&quot; 
    aria-label=&quot;Anchor link for: word-office-suites&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;span&gt;
Word (Office Suites)&lt;&#x2F;h3&gt;
&lt;p&gt;Microsoft Office (Word, Excel etc.) does not work on Linux. At least, not the full app. You have several alternatives.&lt;br &#x2F;&gt;
The first is Office Online. This would be the easiest transition, because it is most similar to the full apps. It does miss some features though. I also find it can be quite sluggish.&lt;&#x2F;p&gt;
&lt;p&gt;Google Docs is pretty snappy and generally works well. Of course, it is closed source and pretty terrible privacy-wise, but if you are writing some school essays, that may not matter too much.&lt;&#x2F;p&gt;
&lt;p&gt;As for FOSS alternatives, you have Libreoffice and OnlyOffice. Libreoffice is more feature-complete but Docx support can be hit or miss. Onlyoffice has great Docx support, but has less features. If I had to recommend one, I would go for OnlyOffice.&lt;&#x2F;p&gt;
&lt;p&gt;You can also consider using Markdown, Latex. The advantage here is that there are tons of options. Next to that, I love the fact that I can focus on writing first and worry about layout later and have a consistent document in the end. I use Markdown a lot: this blog is written in it, I use it for &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;joplinapp.org&#x2F;&quot;&gt;notes&lt;&#x2F;a&gt;, &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.zettlr.com&#x2F;&quot;&gt;essays&lt;&#x2F;a&gt; and &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;marp.app&#x2F;&quot;&gt;presentations&lt;&#x2F;a&gt;. I especially like using &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;joplinapp.org&#x2F;&quot;&gt;Joplin&lt;&#x2F;a&gt; for note-taking and prefer it a lot over any WYSIWYG editors like Word now. I have also heard good things about &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;obsidian.md&#x2F;&quot;&gt;Obsidian&lt;&#x2F;a&gt;. Besides that, I am keeping an eye on the developments at &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;typst.app&#x2F;&quot;&gt;Typst&lt;&#x2F;a&gt; because it hits a sweet-spot for me personally. It is sadly still in Alpha, so nowhere close to ready for general use.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Disclaimer: I do not often use photo editing or video editing software, but I have written down everything I know from what I have heard&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;adobe-photoshop-photo-editing&quot;&gt;&lt;span class=&quot;not-prose&quot;&gt;
    &lt;a class=&quot;tl-link text-2xl&quot; 
    href=&quot;#adobe-photoshop-photo-editing&quot; 
    aria-label=&quot;Anchor link for: adobe-photoshop-photo-editing&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;span&gt;
Adobe Photoshop (Photo Editing)&lt;&#x2F;h3&gt;
&lt;p&gt;Photoshop (or any Creative Cloud app) does not work on Linux. That being said, Adobe is developing a &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;helpx.adobe.com&#x2F;photoshop&#x2F;using&#x2F;photoshop-web-faq.html&quot;&gt;webversion&lt;&#x2F;a&gt;, although it is in the early stages and therefore quite limited.
&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.photopea.com&#x2F;&quot;&gt;Photopea&lt;&#x2F;a&gt; is an online Photoshop clone which I have heard a lot of good things about.&lt;br &#x2F;&gt;
&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.gimp.org&#x2F;&quot;&gt;Gimp&lt;&#x2F;a&gt; is always an option, although the interface can be intimidating.&lt;br &#x2F;&gt;
I’ve heard that &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;krita.org&#x2F;&quot;&gt;Krita&lt;&#x2F;a&gt; can work well for digital drawing.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;adobe-aftereffects-sony-vegas-video-editing&quot;&gt;&lt;span class=&quot;not-prose&quot;&gt;
    &lt;a class=&quot;tl-link text-2xl&quot; 
    href=&quot;#adobe-aftereffects-sony-vegas-video-editing&quot; 
    aria-label=&quot;Anchor link for: adobe-aftereffects-sony-vegas-video-editing&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;span&gt;
Adobe AfterEffects &#x2F; Sony Vegas (Video Editing)&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;kdenlive.org&#x2F;&quot;&gt;Kdenlive&lt;&#x2F;a&gt; is by far the most complete FOSS video editor on Linux.&lt;br &#x2F;&gt;
&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.blackmagicdesign.com&#x2F;products&#x2F;davinciresolve&#x2F;&quot;&gt;Davinci Resolve&lt;&#x2F;a&gt; is a paid (non-FOSS) option which supposedly works well.&lt;br &#x2F;&gt;
For light editing (think Moviemaker), there are tons of apps. I personally sometimes use &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.openshot.org&#x2F;&quot;&gt;Openshot&lt;&#x2F;a&gt; which reminds me of Moviemaker. &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.shotcut.org&#x2F;&quot;&gt;Shotcut&lt;&#x2F;a&gt; seems to be a good Sony Vegas alternative.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;gaming&quot;&gt;&lt;span class=&quot;not-prose&quot;&gt;
    &lt;a class=&quot;tl-link text-2xl&quot; 
    href=&quot;#gaming&quot; 
    aria-label=&quot;Anchor link for: gaming&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;span&gt;
Gaming&lt;&#x2F;h1&gt;
&lt;p&gt;So what do you need to look out for in gaming? Well,gaming greatly benefits from recent drivers and software. Because of this, I would not recommend Debian. Besides that, it comes down to personal preference. Arch will work but can be dauting to beginners. I personally use Fedora because I like it has a leading edge technology stack, but uses stable versions.&lt;&#x2F;p&gt;
&lt;p&gt;If you like Fedora, I would personally go for Norbora because it has gaming-specific optimisations made by a well known Proton developer: Glorious Eggroll.&lt;&#x2F;p&gt;
&lt;p&gt;If you go for Ubuntu derivatives, I would advice against Linux Mint, because it is behind on their tech-stack. This is an advantage for home-use but a disadvantage for gaming. Other Ubuntu derivatives will work fine for gaming. POP! OS is especially for gaming, because it includes things like the official NVIDIA-drivers by default&lt;&#x2F;p&gt;
&lt;p&gt;If you want to try Arch, just Arch is fine (maybe using the new Archinstall). If you want a GUI installer you can look into Garuda Linux or EndeavorOS. Whatever you do, &lt;strong&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;manjarno.snorlax.sh&#x2F;&quot;&gt;do not install Manjaro&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;steam&quot;&gt;&lt;span class=&quot;not-prose&quot;&gt;
    &lt;a class=&quot;tl-link text-2xl&quot; 
    href=&quot;#steam&quot; 
    aria-label=&quot;Anchor link for: steam&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;span&gt;
Steam&lt;&#x2F;h2&gt;
&lt;p&gt;I could write a whole essay about Steam (Yes, even larger than this one), but there are already many videos about the subject online, so I will try to keep it brief. The important bit is that Valve (the company behind Steam) has released the Steam Deck, as you might know. The Steam Deck uses desktop Linux, so Desktop Linux has piggy backed a lot of Valves work for the Steamdeck.&lt;&#x2F;p&gt;
&lt;p&gt;An especially useful piis Proton (derived from Wine) which allows Windows games to run on Linux. To see if your game works, take a look at &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.protondb.com&#x2F;&quot;&gt;Protondb&lt;&#x2F;a&gt;. You can even log in with Steam (don’t worry, it is a FOSS project) to see what part of your library works. Most games work except…&lt;&#x2F;p&gt;
&lt;h2 id=&quot;multiplayer-games-and-anticheat&quot;&gt;&lt;span class=&quot;not-prose&quot;&gt;
    &lt;a class=&quot;tl-link text-2xl&quot; 
    href=&quot;#multiplayer-games-and-anticheat&quot; 
    aria-label=&quot;Anchor link for: multiplayer-games-and-anticheat&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;span&gt;
Multiplayer games and Anticheat&lt;&#x2F;h2&gt;
&lt;p&gt;Multiplayer games are hit or miss on Linux for a simple reason: anticheat. Most anticheat software have Linux versions and even work with Proton, but developers block it out of fear for cheaters. This fear has never really been proven and there are easier ways of cheating than through Wine, but I digress. The end-result is that some games do not work on Linux, or might &lt;strong&gt;ban you players for using Proton&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;other-launchers&quot;&gt;&lt;span class=&quot;not-prose&quot;&gt;
    &lt;a class=&quot;tl-link text-2xl&quot; 
    href=&quot;#other-launchers&quot; 
    aria-label=&quot;Anchor link for: other-launchers&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;span&gt;
Other launchers&lt;&#x2F;h2&gt;
&lt;p&gt;Launchers beside Steam are not officially supported, but there are solutions: you can still use Proton with them though with FOSS clients. Examples are &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;lutris.net&#x2F;&quot;&gt;Lutris&lt;&#x2F;a&gt; and &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;usebottles.com&#x2F;&quot;&gt;Bottles&lt;&#x2F;a&gt; for multiple launchers, and &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;heroicgameslauncher.com&#x2F;&quot;&gt;Heroic&lt;&#x2F;a&gt; for GOG and Epic Games. PlayOnLinux is considered outdated and has de-facto been replaced with Bottles.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;conclusion&quot;&gt;&lt;span class=&quot;not-prose&quot;&gt;
    &lt;a class=&quot;tl-link text-2xl&quot; 
    href=&quot;#conclusion&quot; 
    aria-label=&quot;Anchor link for: conclusion&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;span&gt;
Conclusion&lt;&#x2F;h1&gt;
&lt;p&gt;The Linux desktop is great: it gives you freedom to do what you want and it is made by users for users. This means you get to be part of an amazing community of developers and users who care about free software, privacy and user-friendlyness. I hope this guide helped you on your Linux journey and in the words of Louis Rossmann: I hope you learned something.&lt;&#x2F;p&gt;
&lt;p&gt;PS: These were the songs I was listening to during the making of this post.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;playlist?list=OLAK5uy_ku0icwB-l5LZtiXbhxqmaSamNqIh0Ktto&amp;amp;si=enYkec3LatlpKR8L&quot;&gt;Nothing better than some Jazz Standards by Ella and Louis&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>How to make your blog more Blazingly Fast™</title>
        <published>2023-08-26T00:00:00+00:00</published>
        <updated>2023-08-26T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              TeaDrinkingProgrammer
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://teadrinkingprogrammer.github.io/blog/how-to-make-your-blog-blazingly-fast/"/>
        <id>https://teadrinkingprogrammer.github.io/blog/how-to-make-your-blog-blazingly-fast/</id>
        
        <content type="html" xml:base="https://teadrinkingprogrammer.github.io/blog/how-to-make-your-blog-blazingly-fast/">&lt;p&gt;Hello there reader 👋!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;a-little-introduction&quot;&gt;&lt;span class=&quot;not-prose&quot;&gt;
    &lt;a class=&quot;tl-link text-2xl&quot; 
    href=&quot;#a-little-introduction&quot; 
    aria-label=&quot;Anchor link for: a-little-introduction&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;span&gt;
A little introduction&lt;&#x2F;h1&gt;
&lt;p&gt;I am Stijn A.K.A the TeaDrinkingProgrammer and you are currently reading the first blog post on my new blog! On this blog you are probably going to see posts about one of my main interests: cultures and languages, music and programming. The main content is probably going to be programming related, but some cross-overs are possible. In the programming space, I mainly follow developments in the FOSS space (I am writing this on &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.zettlr.com&#x2F;&quot;&gt;Zettlr&lt;&#x2F;a&gt; and Fedora Linux) and I sometimes play around with new technologies that interest me, like Rust or Svelte.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;yet-another-blog&quot;&gt;&lt;span class=&quot;not-prose&quot;&gt;
    &lt;a class=&quot;tl-link text-2xl&quot; 
    href=&quot;#yet-another-blog&quot; 
    aria-label=&quot;Anchor link for: yet-another-blog&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;span&gt;
Yet Another Blog&lt;&#x2F;h1&gt;
&lt;p&gt;So why a blog? Isn’t everyone and their dog making a blog nowadays? Yes, that’s true. I mainly view the blog as an exercise in writing and web development, and a way to share my passions. I’ve actually had the idea for a while, but didn’t have much to write about, until I made a &lt;em&gt;very&lt;&#x2F;em&gt; long comment on &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;tildes.net&quot;&gt;Tildes&lt;&#x2F;a&gt;. I realised this comment would make for a good blogpost so now I had motivation &lt;em&gt;and&lt;&#x2F;em&gt; an excuse!  I first thought that Medium would work well enough for me, until I found out that:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;It has no native Markdown support&lt;&#x2F;li&gt;
&lt;li&gt;It will sometimes ask users to log in to read a post&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;Medium not having Markdown is not a dealbreaker perse, but it isn’t great. The final straw was Medium nagging users to log in to read posts. I hate when websites do this so that made the decision final: I would try hosting my own website. Besides: it’s a great excuse to figure out how to host a blog and learn some new tech 😄.&lt;&#x2F;p&gt;
&lt;p&gt;I had already thought about how to go about hosting a blog. I already decided early on I was going to use a static-site generator. Not just because it is the obvious choice, but also because I had &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;docs.tildes.net&#x2F;philosophy&#x2F;site-implementation#use-modern-versions-of-simple-reliable-boring-technology&quot;&gt;the “don’t flip the web-pyramid” mentality from the maker of Tildes&lt;&#x2F;a&gt; in the back of my mind.&lt;&#x2F;p&gt;
&lt;p&gt;I had also heard about github.io being a good option for hosting small websites, and it indeed seemed like the perfect fit: simple, free and no buts or ifs.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;choice-paralysis&quot;&gt;&lt;span class=&quot;not-prose&quot;&gt;
    &lt;a class=&quot;tl-link text-2xl&quot; 
    href=&quot;#choice-paralysis&quot; 
    aria-label=&quot;Anchor link for: choice-paralysis&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;span&gt;
Choice Paralysis&lt;&#x2F;h1&gt;
&lt;p&gt;But now the age-old question: which of the 9000 static-site generators am I going to use? As I said, I wanted to use this project as an excuse to try out something new, and I have been experimenting with Rust for a while now, so why not (Re)write It In Rust™️. I started looking around for a static website generator in Rust, but didn’t have to look for long. I found &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.getzola.org&#x2F;&quot;&gt;Zola&lt;&#x2F;a&gt; and it looked like the right tool for the job: no bloat, easy to use, generates plain HTML and CSS while still allowing me to write in my beloved Markdown, and last but not least: it’s Blazingly Fast ™️. Besides this, the documentation is top-notch and the configuration is great, which it has in common with most Rust projects. As an added bonus, there were a lot of themes to choose from. Sufficed to say: I didn’t look any further.&lt;&#x2F;p&gt;
&lt;p&gt;As for the theme: I ended up choosing &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;isunjn&#x2F;serene&quot;&gt;Serene&lt;&#x2F;a&gt;, because it strikes the right balance for me: simplistic, but not &lt;em&gt;too&lt;&#x2F;em&gt; simplistic. I like a lightweight website as much as the next guy, but a bit of CSS for a nice look and feel is a sacrifice I am willing to make.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;TeaDrinkingProgrammer&#x2F;serene&quot;&gt;I didn’t change much about the theme&lt;&#x2F;a&gt;. I only swapped out the font. This is because it uses a font from Google Fonts by default, and I block those using a plugin because I don’t really trust Google. Under the motto of the golden rule, I swapped out the font with &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;brick.im&#x2F;fonts&#x2F;lato&#x2F;&quot;&gt;one from a non-Google provider&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;After I had configured everything and filled in the first pages, the website was really coming together. There was one last thing to do: the deployment.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;deployment&quot;&gt;&lt;span class=&quot;not-prose&quot;&gt;
    &lt;a class=&quot;tl-link text-2xl&quot; 
    href=&quot;#deployment&quot; 
    aria-label=&quot;Anchor link for: deployment&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;span&gt;
Deployment&lt;&#x2F;h1&gt;
&lt;p&gt;This was surprisingly easy to do: there was already a plug-and-play &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.getzola.org&#x2F;documentation&#x2F;deployment&#x2F;github-pages&#x2F;&quot;&gt;Github Action&lt;&#x2F;a&gt;! It takes your Github repo, runs zola build in a Docker container and posts puts the result on the gh-pages branch. The only thing you have to, is change the branch setting in the Github Pages settings and voila: a blog has been born!&lt;&#x2F;p&gt;
&lt;p&gt;Remember I said I didn’t tweak much about the theme? Well, I ended up going down a CSS rabbit-hole because my username is so long it breaks mobile 😐. It reminded me of why I hate working with raw CSS, especially padding. But, in the end &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;TeaDrinkingProgrammer&#x2F;serene&quot;&gt;I figured out a simple fix&lt;&#x2F;a&gt; and it looks quite good if I say so myself.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;conclusion&quot;&gt;&lt;span class=&quot;not-prose&quot;&gt;
    &lt;a class=&quot;tl-link text-2xl&quot; 
    href=&quot;#conclusion&quot; 
    aria-label=&quot;Anchor link for: conclusion&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;span&gt;
Conclusion&lt;&#x2F;h1&gt;
&lt;p&gt;So, that’s it then. It took me a while to write this post, so the Tildes post will have to wait 😅, so say tuned. To see what the source code looks like, you can take a look on &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;TeaDrinkingProgrammer&#x2F;TeaDrinkingProgrammer.github.io&quot;&gt;my Github&lt;&#x2F;a&gt; &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;TeaDrinkingProgrammer&#x2F;serene&quot;&gt;(Serene theme fork)&lt;&#x2F;a&gt;. If everything works as intended 🤞, there should be a RSS feed, so feel free to subscribe to that if you would like to be updated when I post something else.&lt;&#x2F;p&gt;
&lt;p&gt;Otherwise, thank you for taking the time to read my blogpost!&lt;&#x2F;p&gt;
&lt;p&gt;PS: These were the songs I was listening to during the making of this post.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;z1bgqUlMerI?si=X8Ak-H51KLgPXewI&quot;&gt;Vulfpeck Live at Bonaroo&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=rv4wf7bzfFE&quot;&gt;Vulfpeck Live at Madison Square Garden&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=mWyfkFogGeU&amp;amp;list=OLAK5uy_k0IjOTynmaZNR9SldIRbJ5pdE8Y9ciD8k&quot;&gt;Joni Mitchell Shadows And Light&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=3iIW9_rkJww&quot;&gt;The Fearless Flyers Live in Europe&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Note to self: I listen to a lot of live albums.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Why I added tracking and how it works</title>
        <published>2023-08-26T00:00:00+00:00</published>
        <updated>2023-08-26T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              TeaDrinkingProgrammer
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://teadrinkingprogrammer.github.io/blog/user-statistics/"/>
        <id>https://teadrinkingprogrammer.github.io/blog/user-statistics/</id>
        
        <content type="html" xml:base="https://teadrinkingprogrammer.github.io/blog/user-statistics/">&lt;h1 id=&quot;tracking-and-privacy&quot;&gt;&lt;span class=&quot;not-prose&quot;&gt;
    &lt;a class=&quot;tl-link text-2xl&quot; 
    href=&quot;#tracking-and-privacy&quot; 
    aria-label=&quot;Anchor link for: tracking-and-privacy&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;span&gt;
Tracking and privacy&lt;&#x2F;h1&gt;
&lt;p&gt;I have a small update to my blog before I continue writing some more blog-posts in the Christmas-holiday (happy 2024 btw if you are reading this around new-years). I have some ideas for new blog posts, but I wanted to add user metrics first. I already here some people say: “why add tracking?? That is not privacy friendly”. Well, I have great news: I hate privacy-invading tracking as much as the next guy and I agree that big tech tracking is terrible development in the web. I am a great proponent of privacy-friendly apps: I use Linux, I use Firefox with privacy plugins and I try to degoogle my life as much as possible.&lt;&#x2F;p&gt;
&lt;p&gt;How do I rhyme this with user-metrics? Well, I think there is a difference between tracking across multiple websites and gathering user statistics. I am strongly opposed the former but actively support the latter: I purposefully set KDE (my Linux desktop of choice) to gather the most data possible. The key difference  with KDE and companies like Google is that the data KDE gathers is anonymous and serves to better understand their users to improve the product. Gathering user-metrics like this is very important to the success of products or projects. Without them, you have no idea how your users are using your product or if anyone even uses it at all. There are some proxies for the amount of users, but these methods are murky at best and completely arbitrary at worst. An example is the amount of issues on a Github project: a percentage of users will file them, but for some projects this percentage is vastly higher than for others.&lt;&#x2F;p&gt;
&lt;p&gt;My reason for wanting user metrics is simple: I am just curious how many people are reading my blog. I like writing them regardless of viewership but it is nice to know how many people are reading your work.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;what-do-i-use&quot;&gt;&lt;span class=&quot;not-prose&quot;&gt;
    &lt;a class=&quot;tl-link text-2xl&quot; 
    href=&quot;#what-do-i-use&quot; 
    aria-label=&quot;Anchor link for: what-do-i-use&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;span&gt;
What do I use&lt;&#x2F;h1&gt;
&lt;p&gt;But enough faffing about: what tracking do I use and why.&lt;&#x2F;p&gt;
&lt;p&gt;My requirements for user analytics were simple:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;No big tech (especially Google Analytics)&lt;&#x2F;li&gt;
&lt;li&gt;Free tier. I don’t care about a maximum amount of event because I have low viewership&lt;&#x2F;li&gt;
&lt;li&gt;GDPR compliance without a banner.&lt;&#x2F;li&gt;
&lt;li&gt;Open source&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;I already had a whole blog-post ready about why I chose Posthog. I had even implemented a privacy banner and a defence of it. It still didn’t really sit right with me because it was still too complicated for my liking. Then I decided to look at what &lt;a href=&quot;https:&#x2F;&#x2F;teadrinkingprogrammer.github.io&#x2F;blog&#x2F;user-statistics&#x2F;fasterthanli.me&quot;&gt;fasterthanlime&lt;&#x2F;a&gt; uses and I saw that he uses &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.goatcounter.com&#x2F;&quot;&gt;Goatcounter&lt;&#x2F;a&gt;. It is exactly what I am looking for: simple, anonymous, free and open source. I immediately deleted all my code for Posthog and just used that instead. I wasted some time setting up Posthog, but oh well: “it is what it is”. At least I learned something.&lt;&#x2F;p&gt;
&lt;p&gt;One disadvantage of Goatcounter over Posthog is that Goatcounter is included in the EasyList filter which is included in Ublock Origin. Because a relatively large part of developers&#x2F;techy people use Adblockers, this is quite unfortunate. I also recommend Ublock Origin myself so it’s sad to see that it blocks a privacy friendly alternative to big tech solutions. I have opened a request for them to remove Goatcounter from the list, so let’s see where that goes.&lt;&#x2F;p&gt;
&lt;p&gt;In the meantime, you can whitelist Goatcounter by adding these lines to your filter rules in Ublock origin:&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;@@gc.zgo.at
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;@@goatcounter.com
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;I am planning to write a few more posts soon about Markdown and Redox OS, so stay tuned for that.&lt;&#x2F;p&gt;
&lt;p&gt;As always, you can comment on here with Github and subscribe to my blog via RSS-feed.&lt;&#x2F;p&gt;
&lt;p&gt;P.S This time I listened to &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;playlist?list=OLAK5uy_lhPmHPxfBU-CZ5_Pw8NVMzTSM3tVWQscA&amp;amp;si=sBqbHlc7y3kN3YRu&quot;&gt;Rogér Fakhrs Fine Anyway&lt;&#x2F;a&gt;. It is a folk album from Lebanon, which is nice for a change.&lt;&#x2F;p&gt;
</content>
        
    </entry>
</feed>
